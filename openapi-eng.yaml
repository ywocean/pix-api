openapi: 3.0.0
info:
  title: API Pix
  version: "2.6.3"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  contact:
    name: Suporte PIX BCB
    email: suporte.pix@bcb.gov.br
    url: https://www.bcb.gov.br/estabilidadefinanceira/pix
  description: |-
    This version is translated by Google ^___^
    The Pix API standardizes services offered by the receiving PSP in the context of the Pix array,
    such as billing creation, verification of received Pix, returns and queries.
    The services exposed by the receiving PSP allow the receiving user to establish integration
    your automation with PSP's Pix services.

    # Pix API evolution

    The Pix API seeks to respect __[SemVer](https://semver.org/lang/pt-BR/)__. In that regard,
    Compatible changes must not generate a new _major_ version.

    The API version is made up of 4 elements: _major_, _minor_, _patch_ and _release candidate_.
    The `v[x]` version in the URL path is the _major_ element of the API version.
    The evolution of the version is as follows:

      - Major: Incompatible changes, breach of contract (v1.0.0 → v2.0.0)
      - Minor: Compatible changes, no breach of contract (v1.1.0 → v1.2.0)
      - Patch: bugfixes, specification clarifications, no functional changes (v1.1.1 → v1.1.2)
      - Release Candidate: Pre-release versions of any upcoming patches, minor or major (v1.0.0-rc.1 → v1.0.0-rc.22)

    Non-breachable changes and clarifications to specifications may occur at any time.
    Clients must be prepared to deal with these changes without going broke.

    The following changes are expected and considered backwards compatible:

    - Added new features in Pix API.
    - Addition of new optional parameters to charges.
    - Added new fields in Pix API responses.
    - Changing the order of fields.
    - Addition of new elements in enumerations


    # Error handling

    The Pix API returns HTTP status codes to indicate success or failures of
    requests.

    `2xx` codes indicate success. `4xx` codes indicate faults caused by
    information sent by the client or the current state of entities. `5xx` codes
    indicate service issues on the Pix API side.

    Error responses include details of the error in the body following the
    _schema_ da [RFC 7807](https://tools.ietf.org/html/rfc7807).

    The `type` field identifies the type of error and the Pix API follows the pattern:

    `https://pix.bcb.gov.br/api/v2/error/<TipoErro>`

    The pattern listed above, referring to the `type` field, does not necessarily consist of a
    URL that will display a valid web page, or a valid endpoint, although it may, in the future,
    be exactly the case. The primary objective is just and only to identify the type of error.

    Listed below are error types and possible Pix API violations.

    ## General

    This section collects errors that could be returned by any endpoints listed in the Pix API.

    ### `RequisicaoInvalida`

      * __Meaning__: Invalid request.
      * __HTTP Status Code__: [400 Bad Request](https://tools.ietf.org/html/rfc7231#section-6.5.1).

    ### `AccessDenied`

      * __Meaning__: Authenticated participant request that violates an authorization rule.
      * __HTTP Status Code__: [403 Forbidden](https://tools.ietf.org/html/rfc7231#section-6.5.3).

    ### `Not Found`

      * __Meaning__: Entity not found.
      * __HTTP Status Code__: [404 Not Found](https://tools.ietf.org/html/rfc7231#section-6.5.4).

    ### `PermanentlyRemoved`

      * __Meaning__: Indicates that the entity existed but has been permanently removed.
      * __HTTP Status Code__: [410 Gone](https://tools.ietf.org/html/rfc7231#section-6.5.9).

    ### `ErroInternoDoServidor`

      * __Meaning__: Unexpected condition when processing request.
      * __HTTP Status Code__: [500 Internal Server Error](https://tools.ietf.org/html/rfc7231#section-6.6.1).

    ### `ServicoIndisponivel`

      * __Meaning__: Service is currently unavailable. Requested service may be down for maintenance or outside the operating window.
      * __HTTP Status Code__: [503 Service Unavailable](https://tools.ietf.org/html/rfc7231#section-6.6.4).

    ### `UnavailabilityForTimeOut`

      * __Meaning__: Indicates that the service took longer than expected to return.
      * __HTTP Status Code__: [504 Gateway Timeout](https://tools.ietf.org/html/rfc7231#section-6.6.5).



    ## Tag  CobPayload 

    This section collects errors returned by endpoints organized under the `CobPayload` tag.
    These errors indicate problems in the recovery attempt, via _location_, of the JSON Payload that represents the charge.

    ### `CobPayloadNaoEncontrado`

    * __Meaning__: The charge in question was not found for the requested location.
    * __HTTP Status Code__: [404](https://tools.ietf.org/html/rfc7231#section-6.5.4) ou [410](https://tools.ietf.org/html/rfc7231#section-6.5.9).
    * __endpoints__: `GET /{pixUrlAccessToken}`, `GET /cobv/{pixUrlAccessToken}`.

    If the present location displayed a charge, but will no longer permanently display it,
    pode-se aplicar o HTTP status code [410](https://tools.ietf.org/html/rfc7231#section-6.5.9). Se a presente location não
    is showing no charge, you can use HTTP status code [404](https://tools.ietf.org/html/rfc7231#section-6.5.4).

    A charge can be "expired" (`calendario.expiracao`), "overdue", "Done",
    among other states where it could not be effectively paid. In these cases, it is a liberality
    the receiving PSP returns the present error code or chooses to serve the payload anyway,
    with the aim of providing additional information to the final paying user regarding the charge.

    ### `CobPayloadOperacaoInvalida`

    * __Meaning__: the charge exists, but the request is invalid.
    * __HTTP Status Code__: [400](https://tools.ietf.org/html/rfc7231#section-6.5.1).
    * __endpoints__: `GET /cobv/{pixUrlAccessToken}`.

    __Violations__:
      - `codMun` does not respect the _schema_.
      - `codMun` is not a valid code according to __[IBGE table of municipalities](https://www.ibge.gov.br/explica/codigos-dos-municipios.php)__.
      - `DPP` does not respect the _schema_.
      - `DPP` prior to the present moment.
      - `DPP` greater than the validity of the charge according to the parameters `calendario.dataDeVencimento`
      and `calendario.validadeAposVencimento`. Example: `dataDeVencimento` => 2020-12-25,
      `validadeAposVencimento` => 10, `DPP` => 2021-01-05. In this example, the `DPP` parameter is
      invalid considering the context presented because it is a date on which the billing
      cannot be paid. The charge, in this example, will not be considered valid
      from the date 2021-01-05.

    ## Tag Cob

    This section collects errors returned by endpoints organized under the `Cob` tag.
    These errors indicate problems managing a charge for immediate payment.

    ### `CobNaoEncontrado`

    * __Meaning__: Charge not found for the informed txid.
    * __HTTP Status Code__: [404](https://tools.ietf.org/html/rfc7231#section-6.5.4).
    * __endpoints__: `[GET|PATCH] /cob/{txid}`.

    ### `CobOperacaoInvalida`

    * __Meaning__: the request that seeks to change or create a charge for immediate payment
    does not respect the _schema_ or is semantically wrong.
    * __HTTP Status Code__: [400](https://tools.ietf.org/html/rfc7231#section-6.5.1).
    * __endpoints__: `[POST|PUT|PATCH] /cob/{txid}`.

    __Violations__ for `PUT|PATCH /cob/{txid}` endpoints:
      - The `cob.calendario.expiracao` field is equal to or less than `zero`.
      - The `cob.valor.original` field does not respect the _schema_.
      - The `cob.valor.original` field is `zero`.
      - The `cob.debtor` object does not respect the _schema_.
      - The `cob.chave` field does not respect the _schema_.
      - The `cob.chave` field corresponds to an account that does not belong to this receiving user.
      - The `solicitacaoPagador` field does not respect the _schema_.
      - The `infoAdditional` object does not respect the _schema_.
      - The `location` referenced by `loc.id` does not exist.
      - The `location` referenced by `loc.id` is already being used by another charge.
      - The `location` referenced by `cob.loc.id` has type "cobv" (it should be "cob").

    __Violations__ specific to the `PUT /cob/{txid}` endpoint:
      - The charge already exists, it is not in the ACTIVE status, and this request seeks to change it.

    __Violations__ specific to the `PATCH /cob/{txid}` endpoint:
      - The charge is not ACTIVE, and this request seeks to change it.
      - Billing is ON, and this request proposes to change
      its status to _REMOVED_BY_USUARIO_RECEBEDOR_ along with other changes
      (it makes no sense to remove a charge at the same time as
      changes that will not be used).
      - the `cob.status` field does not respect the _schema_.

    ### `CobQueryInvalid`

    * __Meaning__: query parameters for the list of charges for immediate payment
    don't respect the _schema_ or don't make sense semantically.
    * __HTTP Status Code__: [400](https://tools.ietf.org/html/rfc7231#section-6.5.1).
    * __endpoints__: `GET /cob` e `GET /cob/{txid}`.

    __Violations__ specific to the `GET /cob` endpoint:
      - some of the parameters informed for the query does not respect the _schema_.
      - the _timestamp_ represented by the `fim` parameter is before the timestamp
      represented by the `inicio` parameter.
      - both `cpf` and `cnpj` parameters are filled.
      - the parameter `paginacao.paginaAtual` is negative.
      - the `paginacao.itensPerPage` parameter is negative.

    __Violations__ specific to the `GET /cob/{txid}` endpoint:
      - the `revision` parameter corresponds to a non-existent revision for the billing
      pointed to by the `txid` parameter.

    ## Tag CobV

    This section collects errors returned by endpoints organized under the `CobV` tag.
    These errors indicate problems managing an overdue charge.

    ### `CobVNaoEncontrada`

    * __Meaning__: Expired charge not found for the informed txid.
    * __HTTP Status Code__: [404](https://tools.ietf.org/html/rfc7231#section-6.5.4).
    * __endpoints__: `[GET|PATCH] /cobv/{txid}`.

    ### `CobVOperacaoInvalida`

    * __Meaning__: the request that seeks to change or create a charge due
    does not respect the _schema_ or is semantically wrong.
    * __HTTP Status Code__: [400](https://tools.ietf.org/html/rfc7231#section-6.5.1).
    * __endpoints__: `[PUT|PATCH] /cobv/{txid}`.

    __Violations__ for `PUT|PATCH /cobv/{txid}` endpoints:
      - This `txid` is associated with a batch and in that batch, the status of this charge is assigned as
      "IN_PROCESSAMENTO" or "NEGADA".
      - The `cobv.calendario.dataDeVencimento` field is prior to the billing creation date.
      - The `cobv.calendario.validadeAposVencimento` field is less than zero.
      - The `cobv.devedor` object does not respect the _schema_.
      - The `cobv.devedor` object does not respect the _schema_.
      - The `cobv.chave` field does not respect the _schema_.
      - The `cobv.chave` field corresponds to an account that does not belong to this receiving user.
      - The `solicitacaoPagador` field does not respect the _schema_.
      - The `infoAdditional` object does not respect the _schema_.
      - The location referenced by `cobv.loc.id` does not exist.
      - The location referenced by `cobv.loc.id` is already being used by another charge.
      - The location referenced by `cobv.loc.id` has type "cob" (it should be "cobv").
      - The `cobv.valor.original` field does not respect the _schema_.
      - The field `cobv.valor.original` has the value `zero`.
      - The object `cobv.valor.fine` does not respect the _schema_.
      - The object `cobv.valor.interest` does not respect the _schema_.
      - The `cobv.valor.batement` object does not respect the _schema_.
      - The `cobv.valor.desconto` object does not respect the _schema_.
      - The `cobv.valor.batement` object represents a value greater than or equal to the value of the
      original charge or greater than or equal to 100%.
      - The `cobv.valor.desconto` object presents some discount element that represents a greater value or
      equal to the original charge amount or greater than or equal to 100%.
      - The object `cobv.valor.discount` presents some element whose date is later than the expiration date
      represented by `calendario.dataDeVencemento`.
      - The object `cobv.valor.desconto` presents modality in the value `1` or `2`,
      however `cobv.value.discount.valuePerc` is filled
      - The object `cobv.valor.desconto` has modality in the value `1` or `2`, however
      the array `cobv.value.discount.discountFixDate` is empty or null.
      - The object `cobv.valor.desconto` presents modality in values ​​from `3` to `6`, however
      the element `cobv.valor.discount.valorPerc` is not filled.
      - The object `cobv.valor.desconto` presents modality in values ​​from `3` to `6`, however
      element `cobv.valor.desconto.descontoDataFixa` is filled or not null.



    __Violations__ specific to the `PUT /cobv/{txid}` endpoint:
      - The charge already exists, it is not ACTIVE, and this request seeks to change it

    __Violations__ specific to the `PATCH /cobv/{txid}` endpoint:
      - The charge is not ACTIVE, and this request seeks to change it
      - Billing is ON, and this request proposes to change
      its status to _REMOVED_BY_USUARIO_RECEBEDOR_ along with other changes
      (it makes no sense to remove a charge at the same time as
      changes that will not be used).
      - the `cob.status` field does not respect the _schema_.

    ### `CobVConsultaInvalida`

    * __Meaning__: query parameters for the list of due charges do not respect the schema
    or do not make sense semantically.
    * __HTTP Status Code__: [400](https://tools.ietf.org/html/rfc7231#section-6.5.1).
    * __endpoints__: `GET /cobv` e `GET /cobv/{txid}`.

    __Violations__ specific to the `GET /cobv` endpoint:
      - some of the parameters informed for the query does not respect the _schema_.
      - the _timestamp_ represented by the `fim` parameter is before the timestamp
      represented by the `inicio` parameter.
      - both `cpf` and `cnpj` parameters are filled.
      - the parameter `paginacao.paginaAtual` is negative.
      - the `paginacao.itensPerPage` parameter is negative.

    __Violations__ specific to the `GET /cobv/{txid}` endpoint:
      - the `revision` parameter corresponds to a non-existent revision for the billing
      pointed to by the `txid` parameter.

    ## Tag LoteCobV
    This section collects errors referring to endpoints that deal with the management of billing batches.

    ### `LoteCobVNaoEncontrado`
    * __Meaning__: Batch not found for the informed `id`.
    * __HTTP Status Code__: [404](https://tools.ietf.org/html/rfc7231#section-6.5.4).
    * __endpoints__: `[GET|PATCH] /lotecobv/{id}`.

    ### `LoteCobVOperacaoInvalida`
    * __Meaning__: the request that seeks to change or create a batch of charges due
    does not respect the _schema_ or is semantically wrong.
    * __HTTP Status Code__: [400](https://tools.ietf.org/html/rfc7231#section-6.5.1).
    * __endpoints__: `[PUT|PATCH] /lotecobv/{id}`.

    __Violations__ for `PUT|PATCH /lotecobv/{id}` endpoints:
      - The field `lotCobV.descricao` does not respect the _schema_.
      - The object `lotCobV.cobsV` does not respect the _schema_.

    __Violations__ for the `PUT /lotecobv/{id}` endpoint:
      - this request tries to create a set of charges among which at least
      a collection is already created.
      - this request seeks to change an existing batch, however it contains an array of
      Charge change requests that don't reference the exact same charges
      referenced by the original requisition that created the batch.
      Once a batch has been created, it cannot be removed or added to
      creation or change of charges to this batch.

    __Violations__ for the `PATCH /lotecobv/{id}` endpoint:
      - this request seeks to change an existing batch and contains, in the `array`
      of charges represented by `cobsv`, a charge not existing in the charges array
      assigned by the original requisition that created the batch.
      Once a batch has been created, charges cannot be removed or added to this batch.

    __Violations__ for `GET /lotecobv/{id}` endpoints:
      - __observation__: for each element of the `cobsv` array, returned by this endpoint, if the billing creation request is in
      "NEGAD" status, the `problem` attribute of this element must be completed respecting
      o [schema](https://tools.ietf.org/html/rfc7807) referenciado pela API Pix.
      - filling in the `problem` attribute, as described above, follows the same rules as for
      errors specified for the `[PUT/PATCH /cobv/{txid}]` endpoints, in order to make it possible, when
      receiving user, understand what was the violation committed when trying to create
      the charge referenced by this element of the `cobsv` array.

    ### `LoteCobVConsultaInvalida`

    * __Meaning__: query parameters for the list of overdue billing batches
    don't respect the _schema_ or don't make sense semantically.
    * __HTTP Status Code__: [400](https://tools.ietf.org/html/rfc7231#section-6.5.1).
    * __endpoints__: `GET /lotecobv` e `GET /lotecobv/{id}`.

    __Violations__ specific to the `GET /lotecobv` endpoint:
      - some of the parameters informed for the query do not respect the _schema_.
      - the _timestamp_ represented by the `fim` parameter is before the timestamp
      represented by the `inicio` parameter.
      - the parameter `paginacao.paginaAtual` is negative.
      - the `paginacao.itensPerPage` parameter is negative.

    ## Tag PayloadLocation
    This section collects errors for endpoints dealing with managing _locations_.

    ### `PayloadLocationNaoEncontrado`
    * __Meaning__: _Location_ not found for the given `id`.
    * __HTTP Status Code__: [404](https://tools.ietf.org/html/rfc7231#section-6.5.4).
    * __endpoints__: `[GET|PATCH] /loc/{id}`, `DELETE /loc/{id}/txid`.

    ### `PayloadLocationOperacaoInvalida`

    * __Meaning__: this request seeks to create a location without respecting the established _schema_.
    * __HTTP Status Code__: [400](https://tools.ietf.org/html/rfc7231#section-6.5.1).
    * __endpoints__: `POST /loc`.

    __Violations__ for the `POST /loc` endpoint:
      - the `tipoCob` field does not respect the _schema_.

    ### `PayloadLocationConsultaInvalida`

    * __Meaning__: query parameters for the list of _locations_ do not respect
    the _schema_ or do not make sense semantically.
    * __HTTP Status Code__: [400](https://tools.ietf.org/html/rfc7231#section-6.5.1).
    * __endpoints__: `GET /loc` e `GET /loc/{id}`.

    __Violations__ specific to the `GET /loc` endpoint:
      - some of the parameters informed for the query do not respect the _schema_.
      - the _timestamp_ represented by the `fim` parameter is before the timestamp
      represented by the `inicio` parameter.
      - the parameter `paginacao.paginaAtual` is negative.
      - the `paginacao.itensPerPage` parameter is negative.

    ## Tag Pix

    Gathers errors in received Pix management endpoints and requests for returns.

    ### `PixNaoEncontrado`

    * __Meaning__: pix not found for the specified `e2eid`.
    * __HTTP Status Code__: [404](https://tools.ietf.org/html/rfc7231#section-6.5.4).
    * __endpoints__: `GET /pix/{e2eid}`

    ### `PixDevolucaoNaoEncontrada`

    * __Meaning__: return represented by {id} not found for the informed `e2eid`.
    * __HTTP Status Code__: [404](https://tools.ietf.org/html/rfc7231#section-6.5.4).
    * __endpoints__: `GET /pix/{e2eid}/devolucao/{id}`

    ### `InvalidQueryPix`

    * __Meaning__: the pix list query parameters received do not respect the schema
    or do not make sense semantically.
    * __HTTP Status Code__: [400](https://tools.ietf.org/html/rfc7231#section-6.5.1).
    * __endpoints__: `GET /pix`.

    __Violations__ specific to the `GET /pix` endpoint:
      - some of the parameters informed for the query does not respect the _schema_.
      - the _timestamp_ represented by the `fim` parameter is before the timestamp
      represented by the `inicio` parameter.
      - both `cpf` and `cnpj` parameters are filled.
      - the parameter `paginacao.paginaAtual` is negative.
      - the `paginacao.itensPerPage` parameter is negative.

    ### `PixDevolucaoInvalida`

    * __Meaning__: this return request does not respect the _schema_ or does not make sense semantically.
    * __HTTP Status Code__: [400](https://tools.ietf.org/html/rfc7231#section-6.5.1).
    * __endpoints__: `PUT /pix/{e2eid}/devolucao/{id}`.

    __Violations__ specific to the `PUT /pix/{e2eid}/devolucao/{id}` endpoint:
      - The `devolucao.valor` field does not respect the _schema_.
      - This return request, together with the other previous returns,
      if applicable, would exceed the originating pix value.
      - This return request has an `{id}` already used by another return request
      return to the `{e2eid}` in question.
      - This return request violates the time window allowed for returns requests
      of a pix (now established as 90 days from the pix's original settlement date).

    ## Tag Webhook
    Gathers errors from the endpoints that handle managing the Pix API Webhooks.

    ### `WebhookOperacaoInvalida`
    * __Meaning__: this request seeks to create a webhook without respecting the _schema_ or,
    still, it presents invalid semantics.
    * __HTTP Status Code__: [400](https://tools.ietf.org/html/rfc7231#section-6.5.1).
    * __endpoints__: `PUT /webhook/{chave}`.

    __Violations__ for `PUT /webhook/{key}` endpoint:
      - the parameter {key} does not correspond to a valid DICT key.
      - the parameter {key} does not correspond to a DICT key belonging to this receiving user.
      - Field webhook.webhookUrl does not respect the _schema_.

    ### `WebhookNaoEncontrado`

    * __Meaning__: the webhook denoted by {key} is not established.
    * __HTTP Status Code__: [404](https://tools.ietf.org/html/rfc7231#section-6.5.4).
    * __endpoints__: `GET /webhook/{chave}`, `DELETE /webhook/{chave}`

    ### `WebhookConsultaInvalida`

    * __Meaning__: query parameters for the list of activated webhooks do not respect the schema
    or do not make sense semantically.
    * __HTTP Status Code__: [400](https://tools.ietf.org/html/rfc7231#section-6.5.1).
    * __endpoints__: `GET /webhook`.

    __Violations__ specific to the `GET /webhook` endpoint:
      - some of the parameters informed for the query does not respect the _schema_.
      - the _timestamp_ represented by the `fim` parameter is before the timestamp
      represented by the `inicio` parameter.
      - the parameter `paginacao.paginaAtual` is negative.
      - the `paginacao.itensPerPage` parameter is negative.

servers:
  - url: https://pix.example.com/api/
    description: Production Server
  - url: https://pix-h.example.com/api/
    description: Homologation Server

tags:
  - name: CobPayload
    x-displayName: Gathers endpoints (locations) that return the JSON Payload that represents a Billing
    description: |-
      It gathers endpoints (locations) used by the payer's PSP software to retrieve the JSON payload representing a charge.

      The endpoints listed in this Tag have different authentication and authorization requirements compared to the other endpoints listed in this API.

      They are __open__ endpoints so that any internet client can connect. Each _location_ is a _[capability url](https://www.w3.org/TR/capability-urls/)_ functionality implemented via the `{pixUrlAccessToken}` fragment.
      For more information, consult the [Standards Manual for Pix initiation](https://www.bcb.gov.br/estabilidadefinanceira/pix).
  - name: Cob
    x-displayName: Billing management for immediate payment
    description: |-
      It brings together endpoints intended to handle immediate billing management.
  - name: CobV
    x-displayName: Managing Expired Charges
    description: |-
      It brings together endpoints intended to handle the management of due charges.
  - name: LoteCobV
    x-displayName: Batch Due Charge Management
    description: |-
      It brings together endpoints intended to handle managing batch due charges.
  - name: PayloadLocation
    x-displayName: Configuration of locations for payloads
    description: |-
      Gathers endpoints intended to handle configuration and removal of locations for use in payloads
  - name: Pix
    x-displayName: Incoming Pix Management
    description: |-
      brings together endpoints intended to handle incoming Pix management.
  - name: Webhook
    x-displayName: Notification Management
    description: |-
      Gathers endpoints for managing notifications from the receiving PSP to the receiving user.

paths:
  /cob/{tid}:
    parameters:
      - name: txid
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/TxId"
    put:
      tags:
        - "Cob"
      summary: "Create immediate charge."
      security:
        - OAuth2: [cob.write]
      description: |-
        Endpoint to create an immediate charge.
      requestBody:
        $ref: "#/components/requestBodies/CobBody"
      responses:
        "201":
          description: "Immediate charge created"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/CobGerada"
              examples:
                return1:
                  $ref: "#/components/examples/cobResponse1"
                return2:
                  $ref: "#/components/examples/cobResponse5"
                return3:
                  $ref: "#/components/examples/cobResponse6"
                return4:
                  $ref: "#/components/examples/cobResponse7"
        "400":
          description: "Request with invalid format."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problema"
              examples:
                example1:
                  $ref: "#/components/examples/RequisicaoInvalidaCobExample1"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
    patch:
      tags:
        - "Cob"
      summary: "Review immediate billing."
      security:
        - OAuth2: [cob.write]
      requestBody:
        $ref: "#/components/requestBodies/CobBodyRevisada"
      responses:
        "200":
          description: "Immediate billing revised. The revision must be incremented by 1."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/CobGerada"
              examples:
                return1:
                  $ref: "#/components/examples/cobResponse3"
        "400":
          description: "Request with invalid format."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problema"
              examples:
                example1:
                  $ref: "#/components/examples/OperacaoInvalidaCobExample1"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
    get:
      parameters:
        - name: "revision"
          in: "query"
          required: false
          schema:
            $ref: "#/components/schemas/Revision"
      tags:
        - "Cob"
      summary: "Check immediate billing."
      security:
        - OAuth2: [cob.read]
      description: |-
        Endpoint to query a charge using a specific txid.
      responses:
        "200":
          description: "Immediate billing data."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/CobCompleta"
              examples:
                return1:
                  $ref: "#/components/examples/cobResponse1"
                return2:
                  $ref: "#/components/examples/cobResponse2"
                return3:
                  $ref: "#/components/examples/cobResponse5"
                return4:
                  $ref: "#/components/examples/cobResponse6"
                return5:
                  $ref: "#/components/examples/cobResponse7"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  "/cob":
    post:
      tags:
        - "Cob"
      summary: "Create immediate charge."
      security:
        - OAuth2: [cob.write]
      description: |-
        Endpoint to create an immediate charge, in this case the txid must be defined by the PSP.
      requestBody:
        $ref: "#/components/requestBodies/CobBody"
      responses:
        "201":
          description: "Immediate charge created"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/CobGerada"
              examples:
                return1:
                  $ref: "#/components/examples/cobResponse1"
                return2:
                  $ref: "#/components/examples/cobResponse5"
                return3:
                  $ref: "#/components/examples/cobResponse6"
                return4:
                  $ref: "#/components/examples/cobResponse7"
        "400":
          description: "Request with invalid format."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problema"
              examples:
                example1:
                  $ref: "#/components/examples/RequisicaoInvalidaCobExample1"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
    get:
      parameters:
        - in: "query"
          name: "start"
          required: true
          schema:
            $ref: "#/components/schemas/Home"
        - in: "query"
          name: "fim"
          required: true
          schema:
            $ref: "#/components/schemas/Fim"
        - name: "cpf"
          in: "query"
          schema:
            type: "string"
            title: "CPF"
            pattern: "/^\\d{11}$/"
            description: "Filter by the debtor's CPF. It cannot be used at the same time as the CNPJ."
        - name: "cnpj"
          in: "query"
          schema:
            type: "string"
            title: "CNPJ"
            pattern: "/^\\d{14}$/"
            description: "Filter by the debtor's CNPJ. It cannot be used at the same time as the CPF."
        - name: "locationPresente"
          in: "query"
          schema:
            type: "boolean"
        - name: "status"
          in: "query"
          schema:
            type: "string"
            title: "Billing Record Status"
            description: "Filter by billing status."
        - $ref: "#/components/parameters/paginaAtual"
        - $ref: "#/components/parameters/itensPorPagina"
      tags:
        - "Cob"
      summary: "Consult the list of immediate charges."
      security:
        - OAuth2: [cob.read]
      description: |-
        Endpoint to query immediate charges through parameters such as start, end, cpf, cnpj and status.
      responses:
        "200":
          description: "List of immediate charges."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/CobsConsultadas"
              examples:
                getCobs1:
                  $ref: "#/components/examples/getCobs1"
                getCobs2:
                  $ref: "#/components/examples/getCobs2"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  "/cobv/{txid}":
    parameters:
      - name: "txid"
        in: "path"
        required: true
        schema:
          $ref: "#/components/schemas/TxId"
    put:
      tags:
        - "CobV"
      summary: "Create charge with due date."
      security:
        - OAuth2: [cobv.write]
      description: |-
        Endpoint to create a due charge.
      requestBody:
        $ref: "#/components/requestBodies/CobVBody"
      responses:
        "201":
          description: "Created due date"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/CobVGerada"
              examples:
                return1:
                  $ref: "#/components/examples/cobResponse4"
        "400":
          description: "Request with invalid format."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problema"
              examples:
                example1:
                  $ref: "#/components/examples/RequisicaoInvalidaCobVExample1"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
    patch:
      tags:
        - "CobV"
      summary: "Review due billing."
      security:
        - OAuth2: [cobv.write]
      requestBody:
        $ref: "#/components/requestBodies/CobVBodyRevisada"
      responses:
        "200":
          description: "Charge due revised. The revision must be incremented by 1."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/CobVGerada"
              examples:
                return1:
                  $ref: "#/components/examples/cobResponse4"
        "400":
          description: "Request with invalid format."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problema"
              examples:
                example1:
                  $ref: "#/components/examples/OperacaoInvalidaCobVExample1"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
    get:
      parameters:
        - name: "revision"
          in: "query"
          required: false
          schema:
            $ref: "#/components/schemas/Revision"
      tags:
        - "CobV"
      summary: "Consult billing due."
      security:
        - OAuth2: [cobv.read]
      description: |-
        Endpoint to query a charge due through a specific txid.
      responses:
        "200":
          description: "Due date billing data."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/CobVCompleta"
              examples:
                return1:
                  $ref: "#/components/examples/cobResponse4"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  "/cobv":
    get:
      parameters:
        - in: "query"
          name: "start"
          required: true
          schema:
            $ref: "#/components/schemas/Home"
        - in: "query"
          name: "fim"
          required: true
          schema:
            $ref: "#/components/schemas/Fim"
        - name: "cpf"
          in: "query"
          schema:
            type: "string"
            title: "CPF"
            pattern: "/^\\d{11}$/"
            description: "Filter by the debtor's CPF. It cannot be used at the same time as the CNPJ."
        - name: "cnpj"
          in: "query"
          schema:
            type: "string"
            title: "CNPJ"
            pattern: "/^\\d{14}$/"
            description: "Filter by the debtor's CNPJ. It cannot be used at the same time as the CPF."
        - name: "locationPresente"
          in: "query"
          schema:
            type: "boolean"
        - name: "status"
          in: "query"
          schema:
            type: "string"
            title: "Billing Record Status"
            description: "Filter by billing status."
        - name: "loteCobVId"
          in: "query"
          schema:
            type: "integer"
            format: "int32"
            title: "Due billing batch id"
            description: "Id of the due billing batch."
        - $ref: "#/components/parameters/paginaAtual"
        - $ref: "#/components/parameters/itensPorPagina"
      tags:
        - "CobV"
      summary: "Check the list of due charges."
      security:
        - OAuth2: [cobv.read]
      description: |-
        Endpoint to query due charges through parameters such as start, end, cpf, cnpj and status.
      responses:
        "200":
          description: "List of due charges."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/CobsVConsultadas"
              examples:
                getCobs1:
                  $ref: "#/components/examples/getCobsV1"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  "/lotecobv/{id}":
    parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
          title: "Batch identifier of due charges, in text format."
    put:
      tags:
        - "LoteCobV"
      summary: "Create/Change batch of due charges."
      security:
        - OAuth2: [lotecobv.write]
      description: |-
        Endpoint used to create or change a batch of due charges.

        For the billing change use case, the array to be assigned in the request
        must be composed of the exact requests for creation of collections that
        contained in the array assigned in the original request.

        You cannot use this endpoint to _change_ a batch of due charges
        adding or removing existing charges within the set of charges
        created in the batch's original requisition.

        In other words, if you originally created a batch, for example with the charges
        [`a`, `b` and `c`], you cannot _alter_ this original set of charges that the
        batch stands for [`a`, `b`, `c`, `d`], or for [`a`, `b`].
        On the other hand, you can change _in batch_ the charges [`a`, `b`, `c`],
        as originally stated in the original batch requisition.

        A billing __creation__ request with status "IN_PROCESSAMENTO" or "DENIED"
        is associated with a charge does not _exist_, so it will not be
        listed under `GET /cobv` or `GET /cobv/{txid}`.

        A charge, once created via `PUT /cobv/{txid}`,
        it cannot be associated with a batch later.

        A charge, once created via `PUT /lotecobv/{id}`,
        it cannot be associated with a new batch later.

      requestBody:
        $ref: "#/components/requestBodies/LoteCobVBody"
      responses:
        "202":
          description: "Batch of charges with due date requested for creation."
        "400":
          description: "Request with invalid format."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problema"
              examples:
                example1:
                  $ref: "#/components/examples/RequisicaoInvalidaLoteCobVExample1"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
    patch:
      tags:
        - "LoteCobV"
      summary: "Used to review specific charges within a batch of due charges."
      security:
        - OAuth2: [lotecobv.write]
      description: |-
        Endpoint used to review specific charges within a batch of due charges.

        The difference between this endpoint and the related PUT endpoint is that this endpoint supports an array
        `cobsv` with fewer requests to create or change charges than the array assigned in the batch's original request.

        You cannot, however, use this endpoint to add or remove requests from
        change or creation of charges as contained in the batch's original requisition.
      requestBody:
        $ref: "#/components/requestBodies/LoteCobVBodyRevisado"
      responses:
        "202":
          description: "Bill of Charges review request forwarded for processing."
        "400":
          description: "Request with invalid format."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problema"
              examples:
                example1:
                  $ref: "#/components/examples/OperacaoInvalidaCobVExample1"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
    get:
      tags:
        - "LoteCobV"
      summary: "Query a specific batch of overdue charges."
      security:
        - OAuth2: [lotecobv.read]
      description: |-
        Endpoint to query a batch of charges due.
      responses:
        "200":
          description: "Lot of charges due."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/LoteCobVConsultado"
              examples:
                example1:
                  $ref: "#/components/examples/loteCobVResponse1"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  "/lotecobv":
    get:
      parameters:
        - in: "query"
          name: "start"
          required: true
          schema:
            $ref: "#/components/schemas/Home"
        - in: "query"
          name: "fim"
          required: true
          schema:
            $ref: "#/components/schemas/Fim"
        - $ref: "#/components/parameters/paginaAtual"
        - $ref: "#/components/parameters/itensPorPagina"
      tags:
        - "LoteCobV"
      summary: "Consult batches of charges due."
      security:
        - OAuth2: [lotecobv.read]
      description: |-
        Endpoint to consult the list of due collection batches.
      responses:
        "200":
          description: "Batches of charges due."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/LotesCobVConsultados"
              examples:
                example1:
                  $ref: "#/components/examples/getLotesCobsV"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  "/place":
    post:
      tags:
        - "PayloadLocation"
      summary: "Criar location do payload."
      security:
        - OAuth2: [payloadlocation.write]
      description: |-
        Criar location do payload
      requestBody:
        $ref: "#/components/requestBodies/PayloadLocationBody"
      responses:
        "201":
          description: "Dados da location do Payload."
          headers:
            location:
              schema:
                type: "string"
                format: "uri"
                title: "Identifier of the created location."
                description: "Identifier of the created location."
                example: "pix.example.com/api/loc/1234567"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PayloadLocation"
              examples:
                getPayloadLocation1:
                  $ref: "#/components/examples/payloadLocationResponse5"
                getPayloadLocation2:
                  $ref: "#/components/examples/payloadLocationResponse6"
        "400":
          description: "Request with invalid format."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problema"
              examples:
                example1:
                  $ref: "#/components/examples/RequisicaoInvalidaLocationExample1"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
    get:
      parameters:
        - in: "query"
          name: "start"
          required: true
          schema:
            $ref: "#/components/schemas/Home"
        - in: "query"
          name: "fim"
          required: true
          schema:
            $ref: "#/components/schemas/Fim"
        - name: "txIdPresente"
          in: "query"
          schema:
            type: "boolean"
        - name: "tipoCob"
          in: "query"
          schema:
            type: "string"
            enum:
              - "cob"
              - "cobv"
        - $ref: "#/components/parameters/paginaAtual"
        - $ref: "#/components/parameters/itensPorPagina"
      tags:
        - "PayloadLocation"
      summary: "Consult registered locations."
      security:
        - OAuth2: [payloadlocation.read]
      description: "Endpoint to query registered locations"
      responses:
        "200":
          description: "list of registered locations according to the search criteria."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PayloadLocationConsultadas"
              examples:
                getCobs1:
                  $ref: "#/components/examples/getPayloadLocation1"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  "/place/{id}":
    parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
          title: "Id of the location registered to serve a payload"
    get:
      tags:
        - "PayloadLocation"
      summary: "Recuperar location do payload."
      security:
        - OAuth2: [payloadlocation.read]
      description: |-
        Recupera a location do payload
      responses:
        "200":
          description: "Dados da location do Payload."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PayloadLocationCompleta"
              examples:
                getPayloadLocation1:
                  $ref: "#/components/examples/payloadLocationResponse1"
                getPayloadLocation2:
                  $ref: "#/components/examples/payloadLocationResponse2"
                getPayloadLocation3:
                  $ref: "#/components/examples/payloadLocationResponse3"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  "/loc/{id}/txid":
    parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
          title: "Id of the location registered to serve a payload"
    delete:
      tags:
        - PayloadLocation
      summary: "Unlink a charge from a location."
      description: |
        Endpoint used to unlink a charge from a location.

        If executed successfully, the `loc` entity will no longer have a txid,
        presented himself prior to the call. Additionally, the `cob` or `cobv` entity associated with the
        txid will also no longer display a _location_. this operation
        does not change the `status` of the `cob` or `cobv` in question.
      security:
        - OAuth2: [payloadlocation.write]
      responses:
        "200":
          description: "charge represented by the informed txid successfully unlinked."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PayloadLocation"
              examples:
                getPayloadLocation1:
                  $ref: "#/components/examples/payloadLocationResponse4"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  "/pix/{e2eid}":
    parameters:
      - name: "e2eid"
        in: "path"
        required: true
        schema:
          $ref: "#/components/schemas/EndToEndId"
    get:
      tags:
        - "Pix"
      summary: "Consult Pix."
      security:
        - OAuth2: [pix.read]
      description: "Endpoint to query a Pix through an e2eid."
      responses:
        "200":
          description: "Pix data made."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Pix"
              examples:
                return1:
                  $ref: "#/components/examples/pixResponse1"
                return2:
                  $ref: "#/components/examples/pixResponse2"
                return3:
                  $ref: "#/components/examples/pixResponse3"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  "/pix":
    get:
      parameters:
        - in: "query"
          name: "start"
          required: true
          schema:
            $ref: "#/components/schemas/Home"
        - in: "query"
          name: "fim"
          required: true
          schema:
            $ref: "#/components/schemas/Fim"
        - name: "txid"
          in: "query"
          schema:
            allOf:
              - $ref: "#/components/schemas/TxId"
              - pattern: "[a-zA-Z0-9]{1,35}"
        - name: "txIdPresente"
          in: "query"
          schema:
            type: "boolean"
        - name: "devolucaoPresente"
          in: "query"
          schema:
            type: "boolean"
        - name: "cpf"
          in: "query"
          schema:
            type: "string"
            title: "CPF"
            pattern: "/^\\d{11}$/"
            description: "Filter by payer's CPF. It cannot be used at the same time as CNPJ."
        - name: "cnpj"
          in: "query"
          schema:
            type: "string"
            title: "CNPJ"
            pattern: "/^\\d{14}$/"
            description: "Filter by CNPJ of the payer. It cannot be used at the same time as the CPF."
        - $ref: "#/components/parameters/paginaAtual"
        - $ref: "#/components/parameters/itensPorPagina"
      tags:
        - "Pix"
      summary: "Consult received Pix."
      security:
        - OAuth2: [pix.read]
      description: "Endpoint to query received Pix"
      responses:
        "200":
          description: "List of received Pix according to the search criteria."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/PixConsultados"
              examples:
                getCobs1:
                  $ref: "#/components/examples/getPix1"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  "/pix/{e2eid}/devolucao/{id}":
    parameters:
      - name: "e2eid"
        in: "path"
        required: true
        schema:
          $ref: "#/components/schemas/EndToEndId"
      - name: "id"
        in: "path"
        required: true
        schema:
          $ref: "#/components/schemas/DevolucaoId"
    put:
      tags:
        - "Pix"
      summary: "Request return."
      security:
        - OAuth2: [pix.write]
      description: |
        Endpoint to request a return via a Pix e2eid and the return ID. The reason that will be assigned to PACS.004 will be "MD06" or "SL02" according to the RTReason tab of PACS.004 that appears in the Pix Message Catalog depending on the `nature` of the return (See the description of this field) .
      requestBody:
        $ref: "#/components/requestBodies/DevolucaoBody"
      responses:
        "201":
          description: "Return details."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Devolucao"
              examples:
                return1:
                  $ref: "#/components/examples/devolucaoResponse1"
        "400":
          description: "Request with invalid format."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problema"
              examples:
                example1:
                  $ref: "#/components/examples/RequisicaoInvalidaDevolucaoExample1"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
    get:
      tags:
        - "Pix"
      summary: "Check return."
      security:
        - OAuth2: [pix.read]
      description: "Endpoint to query a bounce using an End To End Pix ID and the bounce ID"
      responses:
        "200":
          description: "Return details."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Devolucao"
              examples:
                return1:
                  $ref: "#/components/examples/devolucaoResponse1"
                return2:
                  $ref: "#/components/examples/devolucaoResponse2"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  "/{pixUrlAccessToken}":
    parameters:
      - name: "pixUrlAccessToken"
        in: "path"
        required: true
        schema:
          type: "string"
    get:
      tags:
        - "CobPayload"
      servers:
        - url: https://{fdqnPSPRecebedor}/{endpointOpcional}
          variables:
            fdqnPSPRecebedor:
              default: example.com
              description: Base endpoint so debtor users can access the JSON payload representing the immediate charge.
      summary: "Retrieve the JSON payload representing the immediate charge."
      description: |
        ## Endpoint (location) that serves a payload that represents an immediate charge.

        When the debtor user reads a dynamic QR Code generated by the recipient, this URL will be accessed and its content will consist of a JWS structure.
        Information on security in accessing urls can be found in the Pix Security Manual available at this __[link](https://www.bcb.gov.br/estabilidadefinanceira/comunicacaodados)__.

      security: []
      responses:
        "200":
          description: |
            # Return Description
            The return of this endpoint is an object that presents JWS structure, as specified in the security manual. Here's an example:

            ```jws
            eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXUyIsImtpZCI6IjIwMTEtMDQtMjkiLCJqa3UiOiJodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNzUxNyIsIng1dCI6IkFwcGVuZGl4QUV4YW1wbGVBMUpXS1NSc2FLZXkifQ.eyJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIyMDIwLTA5LTE1VDE5OjM5OjU0LjAxM1oiLCJhcHJlc2VudGFjYW8iOiIyMDIwLTA0LTAxVDE4OjAwOjAwWiIsImV4cGlyYWNhbyI6IjM2MDAifSwidHhpZCI6ImZjOWE0MzY2ZmYzZDQ5NjRiNWRiYzZjOTFhODcyMmQzIiwicmV2aXNhbyI6IjMiLCJzdGF0dXMiOiJBVElWQSIsInZhbG9yIjp7Im9yaWdpbmFsIjoiNTAwLjAwIn0sImNoYXZlIjoiNzQwN2M5YzgtZjc4Yi0xMWVhLWFkYzEtMDI0MmFjMTIwMDAyIiwic29saWNpdGFjYW9QYWdhZG9yIjoiSW5mb3JtYXIgY2FydGFvIGZpZGVsaWRhZGUiLCJpbmZvQWRpY2lvbmFpcyI6W3sibm9tZSI6InF1YW50aWRhZGUiLCJ2YWxvciI6IjIifV19.qI7NUrYkwcgXmyoyOjt2YLQyhxH-lPdr3xQ7RId9TDXZ-MlWmPJkUScjuo1Nz_EvlSotbWDGOxErBXHeTLHOQM-9T7lBmG5iw6uEX7L5U72XiganIm80EZCFD1vBPq9j89i4cP2U2Yv21TTt8JLhjA57KHLOSlj-KB5UAKCH-MX3AORFcrXFrYL2rrSQDe-lFNtdyPRwLQHIrhkQ6RR2FPhynzUG0401LScS9mWLLYbYzhzwtP5lk07Ryf4MZq86ihmOLFZXkIiW7pbSd8QfD5Dvj28XebLQi_bam9wInqKB--57_N741BskCN_TXf0EHbQ1qjNTgiT8Y1GIrA4pFA
            ```

            This signed JWS object must be validated by the borrower. More technical details regarding the specification
            security measures can be found in the __[Pix Security Manual](https://www.bcb.gov.br/estabilidadefinanceira/pix)__.

            As you can see in the example above, the JWS object has three fragments separated by the character `.` (period). They are: `header`, `payload` and `signature`.

            In terms of functionality, the fragment that interests the debtor is the `payload`, which has a structure as specified by the `schema` of this endpoint, containing details concerning the collection.

          content:
            "application/jose":
              schema:
                $ref: "#/components/schemas/CobPayload"
              examples:
                return1:
                  $ref: "#/components/examples/cobPayload1"
        "400":
          description: "Request with invalid format."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problema"
              examples:
                example1:
                  $ref: "#/components/examples/RequisicaoInvalidaCobPayloadExample1"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  "/cobv/{pixUrlAccessToken}":
    parameters:
      - name: "pixUrlAccessToken"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "codMun"
        in: "query"
        description: |
          Code based on the __[IBGE](https://www.ibge.gov.br/explica/codigos-dos-municipios.php)__ Table of Municipalities Codes, which presents the list of Brazilian municipalities associated with a code composed of 7 digits, the first two referring to the Federation Unit code.
        schema:
          type: "string"
          pattern: "/^\\d{7}$/"
          title: "County code"
      - name: "DPP"
        in: "query"
        description: "Intended payment date. This is a date, in `YYYY-MM-DD` format, according to ISO 8601."
        schema:
          type: "string"
          format: "date"
          example: "2021-04-01"
    get:
      tags:
        - "CobPayload"
      servers:
        - url: https://{fdqnPSPRecebedor}/{endpointOpcional}
          variables:
            fdqnPSPRecebedor:
              default: example.com
              description: Base endpoint so debtor users can access the JSON payload representing the due charge.
      summary: "Retrieve the JSON payload representing the overdue charge."
      description: |
        ## Endpoint (location) serving a payload representing a due charge.

        When the debtor user reads a dynamic QR Code generated by the recipient, this URL will be accessed and its content will consist of a JWS structure.
        Information on security in accessing urls can be found in the Pix Security Manual available at this __[link](https://www.bcb.gov.br/estabilidadefinanceira/comunicacaodados)__.

      security: []
      responses:
        "200":
          description: |
            # Return Description
            The return of this endpoint is an object that presents JWS structure, as specified in the security manual. Here's an example:

            ```jws
            eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXUyIsImtpZCI6IjIwMTEtMDQtMjkiLCJqa3UiOiJodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNzUxNyIsIng1dCI6IkFwcGVuZGl4QUV4YW1wbGVBMUpXS1NSc2FLZXkifQ.eyJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIyMDIwLTA5LTE1VDE5OjM5OjU0LjAxM1oiLCJhcHJlc2VudGFjYW8iOiIyMDIwLTA0LTAxVDE4OjAwOjAwWiIsImRhdGFEZVZlbmNpbWVudG8iOiIyMDIwLTEyLTMxIiwidmFsaWRhZGVBcG9zVmVuY2ltZW50byI6MzB9LCJkZXZlZG9yIjp7ImxvZ3JhZG91cm8iOiJBbGFtZWRhIFNhbnRvcywgTnVtZXJvIDEwLCBCYWlycm8gQnJheiIsImNpZGFkZSI6IkRpYWRlbWEiLCJ1ZiI6IlNQIiwiY2VwIjoiNzA4MDAxMDAiLCJjbnBqIjoiNTY5ODkwMDAwMTk1MzMiLCJub21lIjoiRW1wcmVzYSBkZSBBbGltZW50b3MgU0EifSwicmVjZWJlZG9yIjp7ImxvZ3JhZG91cm8iOiJSdWEgMjAgTnVtZXJvIDcwLCBCYWlycm8gTHV6IiwiY2lkYWRlIjoiQmVsbyBIb3Jpem9udGUiLCJ1ZiI6Ik1HIiwiY2VwIjoiNTUxMjA3NTAiLCJjbnBqIjoiNTg5MDA2MzMxMjA3MTEiLCJub21lIjoiRW1wcmVzYSBkZSBBYmFzdGVjaW1lbnRvIFNBIn0sInR4aWQiOiJmYzlhNDM2NmZmM2Q0OTY0YjVkYmM2YzkxYTg3MjJkMyIsInJldmlzYW8iOiIzIiwic3RhdHVzIjoiQVRJVkEiLCJ2YWxvciI6eyJvcmlnaW5hbCI6IjEyMy40NSIsIm11bHRhIjoiMTUuMDAiLCJqdXJvcyI6IjIuMDAiLCJmaW5hbCI6IjE0MCw0NSJ9LCJjaGF2ZSI6Ijc0MDdjOWM4LWY3OGItMTFlYS1hZGMxLTAyNDJhYzEyMDAwMiIsInNvbGljaXRhY2FvUGFnYWRvciI6IkluZm9ybWFyIGNhcnRhbyBmaWRlbGlkYWRlIiwiaW5mb0FkaWNpb25haXMiOlt7Im5vbWUiOiJxdWFudGlkYWRlIiwidmFsb3IiOiIyIn1dfQ.BYibf_oK38IubbnnfThe4gaXuJgfoGQzFIezxHS76jGLQ4re2BwSdsiIzBW1t0JOtL094jLtJMVttdIdF9YJukrdzbknbf1jzfHghgBfNqXfZm7jxWuV8IO0jimoSoo7oMrG3MYytRFpdk2Q_ZhTL5UgZqVbfJkMwcp8o0FYmzrmiGPll-kgBulTgGgvGjzl-mC5dtl56351ix1-If1D7KAohHzcYTHzEFkvYZlNCcxyHJX94-8IqpYaTQ1rJlnPExPIgys-ioZ3U_QzcPz4d3tGvRAfHEU7VoIeZHeXR1jqKuqvz70ayc8mAbL7RXzJat1Ru_glS3krkSdXdZxK-w
            ```

            This signed JWS object must be validated by the borrower. More technical details regarding the specification
            security measures can be found in the __[Pix Security Manual](https://www.bcb.gov.br/estabilidadefinanceira/pix)__.

            As you can see in the example above, the JWS object has three fragments separated by the character `.` (period). They are: `header`, `payload` and `signature`.

            In terms of functionality, the fragment that interests the debtor is the `payload`, which has a structure as specified by the `schema` of this endpoint, containing details concerning the collection.

          content:
            "application/jose":
              schema:
                $ref: "#/components/schemas/CobVPayload"
              examples:
                return1:
                  $ref: "#/components/examples/cobPayload2"
        "400":
          description: "Request with invalid format."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problema"
              examples:
                example1:
                  $ref: "#/components/examples/RequisicaoInvalidaCobPayloadExample1"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  "/webhook/{chave}":
    parameters:
      - name: "chave"
        in: "path"
        required: true
        schema:
          type: "string"
          title: "Recipient's DICT Key"
          maxLength: 77
    put:
      tags:
        - Webhook
      summary: Configure Webhook Pix.
      description: |
        Endpoint for configuring the notification service about received Pix.
        Only Pix associated with a txid will be notified.
      security:
        - OAuth2: [webhook.write]
      requestBody:
        $ref: "#/components/requestBodies/WebhookConfigBody"
      responses:
        "200":
          description: Webhook for notifications about received Pix associated with a txid.
        "400":
          description: "Request with invalid format."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problema"
              examples:
                example1:
                  $ref: "#/components/examples/RequisicaoInvalidaWebhookExample1"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
      callbacks:
        listPix:
          "{$request.body#/webhookUrl}/pix":
            post:
              description: |
                The callback must be triggered whenever one or more Pix associated with a txid is received
                by the receiving user and provided that the key associated with the Pix in question is
                associated with a registered webhook.

                The callback must also be triggered whenever a bounce associated with a Pix
                associated with a txid reaches a final status: `RETURNED` or `NO_COMPLETED`.

                The specific SLA to be defined in the context of triggering the callbacks is left to
                charge of each receiving PSP. It is advised, however, that the SLA be defined within
                a reasonable limit given that the callback is expected to be an "online" notice of the
                payment occurrence.

                In the context of the specific SLA strategy of each receiving PSP, it is possible to group
                Pix associated with the same key to save multiple activations.
                This service is protected by an mTLS authentication layer. For further details,
                check the [Pix initiation standards manual](https://www.bcb.gov.br/estabilidadefinanceira/pix).
              security: []
              requestBody:
                $ref: "#/components/requestBodies/WebhookPixBody"
              responses:
                "200":
                  description: "Notification received successfully"
    get:
      tags:
        - Webhook
      summary: "Display information about Webhook Pix."
      description: |
        Endpoint for retrieving information about Webhook Pix.
      security:
        - OAuth2: [webhook.read]
      responses:
        "200":
          description: "Data from the webhook."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/WebhookCompleto"
              examples:
                example1:
                  $ref: "#/components/examples/webhookResponse1"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
    delete:
      tags:
        - Webhook
      summary: "Cancelar o webhook Pix."
      description: |
        Endpoint for canceling the webhook. It's not the only way a webhook can be
        removed.

        The receiving PSP is free to unilaterally remove a webhook that is associated
        to a key that no longer belongs to this receiving user.
      security:
        - OAuth2: [webhook.write]
      responses:
        "204":
          description: "Webhook for Pix notifications has been cancelled."
        "403":
          $ref: "#/components/responses/AccessDenied"
        "404":
          $ref: "#/components/responses/NaoEncontrado"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
  "/webhook":
    get:
      parameters:
        - in: "query"
          name: "start"
          required: false
          schema:
            $ref: "#/components/schemas/Home"
        - in: "query"
          name: "fim"
          required: false
          schema:
            $ref: "#/components/schemas/Fim"
        - $ref: "#/components/parameters/paginaAtual"
        - $ref: "#/components/parameters/itensPorPagina"
      tags:
        - "Webhook"
      summary: "Consult registered webhooks."
      security:
        - OAuth2: [webhook.read]
      description: "Endpoint to query registered Webhooks"
      responses:
        "200":
          description: "list of registered locations according to the search criteria."
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/WebhooksConsultados"
              examples:
                getCobs1:
                  $ref: "#/components/examples/getWebhook1"
        "403":
          $ref: "#/components/responses/AccessDenied"
        "503":
          $ref: "#/components/responses/ServicoIndisponivel"
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://pix.example.com/oauth/token
          scopes:
            cob.write: Permission to change immediate charges
            cob.read: Permission to query immediate charges
            cobv.write: Permission to change due charges
            cobv.read: Permission to query overdue charges
            lotecobv.write: Permission to change batches of charges due
            lotecobv.read: Permission to query overdue billing batches
            pix.write: Permission to change Pix
            pix.read: Permission to query Pix
            webhook.read: Permission to query the webhook
            webhook.write: Permission to change the webhook
            payloadlocation.write: Permission to change payloads
            payloadlocation.read: Permission to query payloads
  examples:
    cobBody1:
      summary: "Example of creating a charge with due date 1"
      value:
        calendar:
          Expiry date: "2020-12-31"
          validityAfterExpiry: 30
        place:
          id: 789
        debtor:
          Address: "Alameda Souza, Number 80, Bairro Braz"
          City: "Recife"
          ugh: "ON"
          pocket: "70011750"
          cpf: "12345678909"
          name: "Francisco da Silva"
        value:
          original: "123.45"
          a lot:
            mode: "2"
            valuePerc: "15.00"
          fees:
            mode: "2"
            valuePerc: "2.00"
          discount:
            mode: "1"
            discountFixDate:
              - data: "2020-11-30"
                valuePerc: "30.00"
        chave: "5f84a4c5-c5cb-4599-9f13-7eb4d419dacc"
        solicitacaoPagador: "Billing for services rendered."
    cobBody2:
      summary: "Example of creating immediate billing 1"
      value:
        calendar:
          expiration: 3600
        debtor:
          cnpj: "12345678000195"
          name: "Empresa de Serviços SA"
        value:
          original: "37.00"
          modalityChange: 1
        chave: "7d9f0335-8dcc-4054-9bf9-0dbd61d36906"
        solicitacaoPagador: "Service performed."
        additional info:
          - name: "Field 1"
            value: "Additional Information1 of the PSP-Receiver"
          - name: "Field 2"
            value: "Additional Information2 of the PSP-Receiver"
    cobBody3:
      summary: "Example billing review 1"
      value:
        place:
          id: 7768
        debtor:
          cpf: "12345678909"
          name: "Francisco da Silva"
        value:
          original: "123.45"
        solicitacaoPagador: "Billing for services rendered."
    cobBody4:
      summary: "Example billing review 2"
      value:
        value:
          original: "567.89"
        requestPagador: "Inform loyalty card"
    cobBody5:
      summary: "Example Billing Review 3"
      value:
        status: REMOVED_BY_RECEIVER_USER
    cobBody6:
      summary: "Example of creating immediate billing with Saque Pix"
      value:
        debtor:
          cnpj: "12345678000195"
          name: "Empresa de Serviços SA"
        value:
          original: "0.00"
          ModalityChange: 0
          withdrawal:
            withdraw:
              value: "5.00"
              ModalityChange: 0
              modalityAgent: "AGPSS"
              lenderDoServicoDeSaque: "12345678"
        chave: "7d9f0335-8dcc-4054-9bf9-0dbd61d36906"
    cobBody7:
      summary: "Example review of billing due 1"
      value:
        place:
          id: 789
        debtor:
          Address: "Alameda Souza, Number 80, Bairro Braz"
          City: "Recife"
          ugh: "ON"
          pocket: "70011750"
          cpf: "12345678909"
          name: "Francisco da Silva"
        value:
          original: "123.45"
        solicitacaoPagador: "Billing for services provided."
    cobBody8:
      summary: "Example of creating immediate charge with Saque Pix 2"
      value:
        debtor:
          cnpj: "12345678000195"
          name: "Empresa de Serviços SA"
        value:
          original: "0.00"
          ModalityChange: 0
          withdrawal:
            withdraw:
              value: "20.00"
              modalityChange: 1
              modalityAgent: "AGPSS"
              lenderDoServicoDeSaque: "12345678"
        chave: "7d9f0335-8dcc-4054-9bf9-0dbd61d36906"
    cobBody9:
      summary: "Example of creating immediate charge with Saque Pix 3"
      value:
        debtor:
          cnpj: "12345678000195"
          name: "Empresa de Serviços SA"
        value:
          original: "10.00"
          ModalityChange: 0
          withdrawal:
            change:
              value: "0.00"
              modalityChange: 1
              modalityAgent: "AGTEC"
              lenderDoServicoDeSaque: "12345678"
        chave: "7d9f0335-8dcc-4054-9bf9-0dbd61d36906"
    loteCobVBody1:
      summary: "Example of creating a batch of charges with due date 1"
      value:
        description: "Collections from students of the afternoon shift"
        cobsv:
          - calendar:
              Expiry date: "2020-12-31"
              validityAfterExpiry: 30
            txid: "fb2761260e554ad593c7226beb5cb650"
            place:
              id: 789
            debtor:
              Address: "Alameda Souza, Number 80, Bairro Braz"
              City: "Recife"
              ugh: "ON"
              pocket: "70011750"
              cpf: "08577095428"
              Name: "João Souza"
            value:
              original: "100.00"
            chave: "7c084cd4-54af-4172-a516-a7d1a12b75cc"
            solicidacaoPagador: "Inform registration"
          - calendar:
              Expiry date: "2020-12-31"
              validityAfterExpiry: 30
            txid: "7978c0c97ea847e78e8849634473c1f1"
            place:
              id: 57221
            debtor:
              Address: "Rua 15, Number 1, Bairro Campo Grande"
              City: "Recife"
              ugh: "ON"
              pocket: "70055751"
              cpf: "15311295449"
              Name: "Manoel Silva"
            value:
              original: "100.00"
            chave: "7c084cd4-54af-4172-a516-a7d1a12b75cc"
            solicidacaoPagador: "Inform registration"
    loteCobVBodyRevisado1:
      summary: "Example review of batch of charges due 1"
      value:
        cobsv:
          - calendar:
              Expiry date: "2020-01-10"
            txid: "fb2761260e554ad593c7226beb5cb650"
            value:
              original: "110.00"
          - calendar:
              Expiry date: "2020-01-10"
            txid: "7978c0c97ea847e78e8849634473c1f1"
            value:
              original: "110.00"
    cobResponse1:
      summary: "Immediate billing example 1"
      value:
        calendar:
          creation: "2020-09-09T20:15:00.358Z"
          expiration: 3600
        txid: "7978c0c97ea847e78e8849634473c1f1"
        revision: 0
        place:
          id: 789
          location: "pix.example.com/qr/9d36b84fc70b478fb95c12729b90ca25"
          tipoCob: "cob"
        location: "pix.example.com/qr/9d36b84fc70b478fb95c12729b90ca25"
        status: "ACTIVE"
        debtor:
          cnpj: "12345678000195"
          name: "Empresa de Serviços SA"
        value:
          original: "37.00"
          modalityChange: 1
        chave: "7d9f0335-8dcc-4054-9bf9-0dbd61d36906"
        solicitacaoPagador: "Service performed."
        additional info:
          - name: "Field 1"
            value: "Additional Information1 of the PSP-Receiver"
          - name: "Field 2"
            value: "Additional Information2 of the PSP-Receiver"
    cobResponse2:
      summary: "Immediate billing example 2"
      value:
        calendar:
          creation: "2020-09-09T20:15:00.358Z"
          expiration: 3600
        txid: "655dfdb1a4514b8fbb58254b958913fb"
        review: 1
        place:
          id: 567
          location: "pix.example.com/qr/1dd7f893a58e417287028dc33e21a403"
        location: "pix.example.com/qr/1dd7f893a58e417287028dc33e21a403"
        status: "COMPLETED"
        debtor:
          cnpj: "12345678000195"
          name: "Empresa de Serviços SA"
        value:
          original: "100.00"
          ModalityChange: 0
        key: "40a0932d-1918-4eee-845d-35a2da1690dc"
        requestPagador: "Inform loyalty card"
        pix:
          - endToEndId: "E12345678202009091221kkkkkkkkkkk"
            txid: "655dfdb1a4514b8fbb58254b958913fb"
            value: "110.00"
            schedule: "2020-09-09T20:15:00.358Z"
            infoPagador: "0123456789"
            returns:
              - id: "123ABC"
                rtrId: "Dxxxxxxxxx202009091221kkkkkkkkkk"
                value: "10.00"
                time:
                  solicitacao: "2020-09-09T20:15:00.358Z"
                status: "IN_PROCESSAMENTO"
    cobResponse3:
      summary: "Revised billing example 1"
      value:
        calendar:
          creation: "2020-09-09T20:15:00.358Z"
          expiration: 3600
        txid: "7978c0c97ea847e78e8849634473c1f1"
        review: 1
        place:
          id: 7768
          location: "pix.example.com/qr/b1/9d36b84fc70b478fb95c12729b90ca25"
          tipoCob: "cob"
        location: "pix.example.com/qr/v1/9d36b84fc70b478fb95c12729b90ca25"
        status: "ACTIVE"
        debtor:
          cpf: "12345678909"
          name: "Francisco da Silva"
        value:
          original: "123.45"
          ModalityChange: 0
        chave: "a1f4102e-a446-4a57-bcce-6fa48899c1d1"
        solicitacaoPagador: "Billing for services provided."
    cobResponse4:
      summary: "Example billing with due date 1"
      value:
        calendar:
          creation: "2020-09-09T20:15:00.358Z"
          Expiry date: "2020-12-31"
          validityAfterExpiry: 30
        txid: "7978c0c97ea847e78e8849634473c1f1"
        revision: 0
        place:
          id: 789
          location: "pix.example.com/qr/c2/cobv/9d36b84fc70b478fb95c12729b90ca25"
          tipoCob: "cobv"
        status: "ACTIVE"
        debtor:
          Address: "Alameda Souza, Number 80, Bairro Braz"
          City: "Recife"
          ugh: "ON"
          pocket: "70011750"
          cpf: "12345678909"
          name: "Francisco da Silva"
        receiver:
          address: "Rua 15 Number 1200, Bairro São Luiz"
          Sao Paulo city"
          uf: "SP"
          pocket: "70800100"
          cnpj: "56989000019533"
          name: "Empresa de Logística SA"
        value:
          original: "123.45"
        chave: "5f84a4c5-c5cb-4599-9f13-7eb4d419dacc"
        solicitacaoPagador: "Billing for services rendered."
    cobResponse5:
      summary: "Example of immediate charge with Saque Pix"
      value:
        calendar:
          creation: "2020-09-09T20:15:00.358Z"
          expiration: 3600
        txid: "33beb661beda44a8928fef47dbeb2dc5"
        revision: 0
        place:
          id: 1004
          location: "pix.example.com/qr/7faa6893c4e64893a503baf0d40af213"
          tipoCob: "cob"
        location: "pix.example.com/qr/7faa6893c4e64893a503baf0d40af213"
        status: "ACTIVE"
        debtor:
          cnpj: "12345678000195"
          name: "Empresa de Serviços SA"
        value:
          original: "0.00"
          ModalityChange: 0
          withdrawal:
            withdraw:
              value: "5.00"
              ModalityChange: 0
              modalityAgent: "AGPSS"
              lenderDoServicoDeSaque: "12345678"
        chave: "7d9f0335-8dcc-4054-9bf9-0dbd61d36906"
    cobResponse6:
      summary: "Example of immediate charge with Saque Pix 2"
      value:
        calendar:
          creation: "2020-09-09T20:15:00.358Z"
          expiration: 3600
        txid: "33beb661beda44a8928fef47dbeb2dc5"
        revision: 0
        place:
          id: 1004
          location: "pix.example.com/qr/7faa6893c4e64893a503baf0d40af213"
          tipoCob: "cob"
        location: "pix.example.com/qr/7faa6893c4e64893a503baf0d40af213"
        status: "ACTIVE"
        debtor:
          cnpj: "12345678000195"
          name: "Empresa de Serviços SA"
        value:
          original: "0.00"
          ModalityChange: 0
          withdrawal:
            withdraw:
              value: "20.00"
              modalityChange: 1
              modalityAgent: "AGPSS"
              lenderDoServicoDeSaque: "12345678"
        chave: "7d9f0335-8dcc-4054-9bf9-0dbd61d36906"
    cobResponse7:
      summary: "Example of immediate charge with Saque Pix 3"
      value:
        calendar:
          creation: "2020-09-09T20:15:00.358Z"
          expiration: 3600
        txid: "33beb661beda44a8928fef47dbeb2dc5"
        revision: 0
        place:
          id: 1004
          location: "pix.example.com/qr/7faa6893c4e64893a503baf0d40af213"
          tipoCob: "cob"
        location: "pix.example.com/qr/7faa6893c4e64893a503baf0d40af213"
        status: "ACTIVE"
        debtor:
          cnpj: "12345678000195"
          name: "Empresa de Serviços SA"
        value:
          original: "10.00"
          ModalityChange: 0
          withdrawal:
            change:
              value: "0.00"
              modalityChange: 1
              modalityAgent: "AGTEC"
              lenderDoServicoDeSaque: "12345678"
        chave: "7d9f0335-8dcc-4054-9bf9-0dbd61d36906"
    loteCobVResponse1:
      summary: "Example of batch of charges with due date 1"
      value:
        description: "Collections from students of the afternoon shift"
        creation: "2020-11-01T20:15:00.358Z"
        cobsv:
          - creation: "2020-11-01T20:15:00.358Z"
            txid: "fb2761260e554ad593c7226beb5cb650"
            status: "CREATED"
          - txid: "7978c0c97ea847e78e8849634473c1f1"
            status: "NEGATED"
            problem:
              type: https://pix.bcb.gov.br/api/v2/error/CobVOperacaoInvalida
              title: "Invalid charge."
              status: 400
              detail: "The request that seeks to change or create an expiring charge does not respect the _schema_ or is semantically wrong."
              violet:
                - razao: "The object cobv.devedor does not respect the _schema_."
                  property: "cobv.debtor"
    loteCobVResponse2:
      summary: "Example of batch of charges with due date 2"
      value:
        description: "Annual Subscriber Charges"
        creation: "2020-11-17T20:00:00.358Z"
        cobsv:
          - creation: "2020-11-17T20:00:00.358Z"
            txid: "06601eaa3822423fbe897f613b983e01"
            status: "CREATED"
          - creation: "2020-11-17T20:00:00.358Z"
            txid: "4e07059760d54cf493de6e7f1fbfad9a"
            status: "CREATED"
    payloadLocationBody1:
      summary: "Exemplo de Payload Location 1"
      value:
        tipoCob: "cob"
    payloadLocationBody2:
      summary: "Exemplo de Payload Location 2"
      value:
        tipoCob: "cobv"
    payloadLocationResponse1:
      summary: "Exemplo de Payload Location 1"
      value:
        id: 7716
        txid: "fda9460fe04e4f129b72863ae57ee22f"
        location: "pix.example.com/qr/v2/cobv/2353c790eefb11eaadc10242ac120002"
        tipoCob: "cobv"
        creation: "2020-03-11T21:19:51.013Z"
    payloadLocationResponse2:
      summary: "Exemplo de Payload Location 2"
      value:
        id: 856
        txid: "31e08604f9ce459bb59672332af8d672"
        location: "pix.example.com/qr/v2/cobv/39c9f435c6324867aa1dec1260e1127c"
        tipoCob: "cobv"
        creation: "2020-02-10T19:22:52.013Z"
    payloadLocationResponse3:
      summary: "Exemplo de Payload Location 3"
      value:
        id: 2316
        txid: "eb9d87f36fca4c92b7d5ec48e2ee3853"
        location: "pix.example.com/qr/v2/a8534e273ecb47d3ac30613104544466"
        tipoCob: "cob"
        creation: "2020-05-31T19:39:54.013Z"
    payloadLocationResponse4:
      summary: "Exemplo de Payload Location 3"
      value:
        id: 2316
        location: "pix.example.com/qr/v2/a8534e273ecb47d3ac30613104544466"
        tipoCob: "cob"
        creation: "2020-05-31T19:39:54.013Z"
    payloadLocationResponse5:
      summary: "Exemplo de Payload Location 1"
      value:
        id: 7716
        location: "pix.example.com/qr/v2/2353c790eefb11eaadc10242ac120002"
        tipoCob: "cob"
        creation: "2020-03-11T21:19:51.013Z"
    payloadLocationResponse6:
      summary: "Exemplo de Payload Location 2"
      value:
        id: 856
        location: "pix.example.com/qr/v2/cobv/39c9f435c6324867aa1dec1260e1127c"
        tipoCob: "cobv"
        creation: "2020-02-10T19:22:52.013Z"
    pixResponse1:
      summary: "Example of Pix 1"
      value:
        endToEndId: "E12345678202009091221abcdef12345"
        txid: "cd1fe328c875481285a6f233ae41b662"
        value: "100.00"
        schedule: "2020-09-10T13:03:33.902Z"
        infoPagador: "House renovation"
        returns:
          - id: "000AAA111"
            rtrId: "D12345678202009091000abcde123456"
            value: "11.00"
            time:
              solicitacao: "2020-09-10T13:03:33.902Z"
            status: IN_PROCESSAMENTO
    pixResponse2:
      summary: "Example of Pix 2"
      value:
        endToEndId: "E12345678202009091221ghijk78901234"
        txid: "5b933948f3224266b1050ac54319e775"
        value: "200.00"
        schedule: "2020-09-10T13:03:33.902Z"
        infoPagador: "Car review"
    pixResponse3:
      summary: "Example of Pix com Saque"
      value:
        endToEndId: "E88631478202009091221ghijk78901234"
        txid: "82433415910c47e5adb6ac3527cca160"
        value: "200.00"
        componentsValue:
          original:
            value: "180.00"
          withdraw:
            value: "20.00"
            modalityAgent: "AGPSS"
            takeoutServiceprovider: "12345678"
        schedule: "2020-09-10T13:03:33.902Z"
        infoPayer: "Take out Pix"
    webhookBody1:
      summary: "Example Webhook 1 configuration"
      value:
        webhookUrl: "https://pix.example.com/api/webhook/"
    webhookResponse1:
      summary: "Example query from Webhook 1"
      value:
        webhookUrl: "https://pix.example.com/api/webhook/"
        key: "40a0932d-1918-4eee-845d-35a2da1690dc"
        creation: "2020-11-11T10:15:00.358Z"
    pixWebhook1:
      summary: "Example Webhook Pix 1"
      value:
        endToEndId: "E12345678202009091221kkkkkkkkkkk"
        txid: "c3e0e7a4e7f1469a9f782d3d4999343c"
        value: "110.00"
        schedule: "2020-09-09T20:15:00.358Z"
        infoPagador: "0123456789"
        returns:
          id: "123ABC"
          rtrId: "D12345678202009091221abcdf098765"
          value: "10.00"
          time:
            solicitacao: "2020-09-09T20:15:00.358Z"
          status: "IN_PROCESSAMENTO"
    pixWebhook2:
      summary: "Example Webhook Pix 2"
      value:
        endToEndId: "E87654321202009091221dfghi123456"
        txid: "971122d8f37211eaadc10242ac120002"
        value: "110.00"
        schedule: "2020-09-09T20:15:00.358Z"
        infoPagador: "0123456789"
    devolutionResponse1:
      summary: "Return example 1"
      value:
        id: "123456"
        rtrId: D12345678202009091000abcde123456
        value: "7.89"
        time:
          solicitacao: "2020-09-11T15:25:59.411Z"
        status: IN_PROCESSAMENTO
    devolucaoResponse2:
      summary: "Return example 2"
      value:
        id: "502"
        rtrId: D12345678202011111000fghij789012
        value: "20.00"
        time:
          solicitacao: "2020-09-11T15:25:59.411Z"
        status: NOT_COMPLETED
        reason: "Denied due to timeout"
    returnRequested1:
      summary: "Example Return Request 1"
      value:
        value: "7.89"
    cobPayload1:
      summary: "Immediate billing payload example 1"
      value:
        calendar:
          creation: "2020-09-15T19:39:54.013Z"
          presentation: "2020-04-01T18:00:00Z"
          expiration: 3600
        txid: "fc9a4366ff3d4964b5dbc6c91a8722d3"
        review: 3
        status: "ACTIVE"
        value:
          original: "500.00"
          ModalityChange: 0
        key: "7407c9c8-f78b-11ea-adc1-0242ac120002"
        requestPagador: "Inform loyalty card"
        additional info:
          - name: "quantity"
            value: "2"
    cobPayload2:
      summary: "Example billing payload with expiration 1"
      value:
        calendar:
          creation: "2020-09-15T19:39:54.013Z"
          presentation: "2020-04-01T18:00:00Z"
          Expiry date: "2020-12-31"
          validityAfterExpiry: 30
        debtor:
          cnpj: "56989000019533"
          name: "Empresa de Alimentos SA"
        receiver:
          Address: "Rua 20 Number 70, Bairro Luz"
          city: "Belo Horizonte"
          uf: "MG"
          pocket: "55120750"
          cnpj: "58900633120711"
          name: "Empresa de Abastecimento SA"
        txid: "fc9a4366ff3d4964b5dbc6c91a8722d3"
        review: 3
        status: "ACTIVE"
        value:
          original: "123.45"
          lot: "15.00"
          interest: "2.00"
          final: "140.45"
        key: "7407c9c8-f78b-11ea-adc1-0242ac120002"
        requestPagador: "Inform loyalty card"
        additional info:
          - name: "quantity"
            value: "2"
    getCobs1:
      summary: "Example return from billing query 1"
      value:
        in parameters:
          start: "2020-04-01T00:00:00Z"
          end: "2020-04-02T10:00:00Z"
          page collective agreement:
            page Atual: 0
            itensPorPage: 100
            numberOfPages: 1
            TotalQuantityOfItems: 2
        cobs:
          - allOf:
              - $ref: "#/components/examples/cobResponse1/value"
          - allOf:
              - $ref: "#/components/examples/cobResponse2/value"
          - allOf:
              - $ref: "#/components/examples/cobResponse5/value"
          - allOf:
              - $ref: "#/components/examples/cobResponse6/value"
          - allOf:
              - $ref: "#/components/examples/cobResponse7/value"
    getCobs2:
      summary: "Example return from billing query 2"
      value:
        in parameters:
          start: "2020-04-01T00:00:00Z"
          fim: "2020-04-01T23:59:59Z"
          page collective agreement:
            page Atual: 0
            itensPorPage: 100
            numberOfPages: 1
            TotalQuantityOfItems: 1
        cobs:
          - allOf:
              - $ref: "#/components/examples/cobResponse1/value"
    getCobsV1:
      summary: "Example of query return for charges with maturity 1"
      value:
        in parameters:
          start: "2020-04-01T00:00:00Z"
          fim: "2020-04-01T23:59:59Z"
          page collective agreement:
            page Atual: 0
            itensPorPage: 100
            numberOfPages: 1
            TotalQuantityOfItems: 1
        cobs:
          - allOf:
              - $ref: "#/components/examples/cobResponse4/value"
    getPix1:
      summary: "Example query return from Pix 1"
      value:
        in parameters:
          start: "2020-04-01T00:00:00Z"
          fim: "2020-04-01T23:59:59Z"
          page collective agreement:
            page Atual: 0
            itensPorPage: 100
            numberOfPages: 1
            TotalQuantityOfItems: 2
        pix:
          - allOf:
              - $ref: "#/components/examples/pixResponse1/value"
          - allOf:
              - $ref: "#/components/examples/pixResponse2/value"
          - allOf:
              - $ref: "#/components/examples/pixResponse3/value"
    getLotesCobsV:
      summary: "Example query return from Pix 1"
      value:
        in parameters:
          start: "2020-01-01T00:00:00Z"
          fim: "2020-12-01T23:59:59Z"
          page collective agreement:
            page Atual: 0
            itensPorPage: 100
            numberOfPages: 1
            TotalQuantityOfItems: 2
        lots:
          - allOf:
              - $ref: "#/components/examples/loteCobVResponse1/value"
          - allOf:
              - $ref: "#/components/examples/loteCobVResponse2/value"
    getPayloadLocation1:
      summary: "Example query return from locations 1"
      value:
        in parameters:
          start: "2020-04-01T00:00:00Z"
          fim: "2020-04-01T23:59:59Z"
          page collective agreement:
            page Atual: 0
            itensPorPage: 100
            numberOfPages: 1
            TotalQuantityOfItems: 3
        place:
          - allOf:
              - $ref: "#/components/examples/payloadLocationResponse1/value"
          - allOf:
              - $ref: "#/components/examples/payloadLocationResponse2/value"
          - allOf:
              - $ref: "#/components/examples/payloadLocationResponse3/value"
    getWebhook1:
      summary: "Example query return from Webhooks 1"
      value:
        in parameters:
          start: "2020-04-01T00:00:00Z"
          fim: "2020-04-01T23:59:59Z"
          page collective agreement:
            page Atual: 0
            itensPorPage: 100
            numberOfPages: 1
            TotalQuantityOfItems: 1
        webhooks:
          - allOf:
              - $ref: "#/components/examples/webhookResponse1/value"
    RequisicaoInvalidaCobExample1:
      summary: "Example error from request 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/CobOperacaoInvalida
        title: "Invalid charge."
        status: 400
        detail: "The request that seeks to change or create a charge for immediate payment does not respect the _schema_ or is semantically wrong."
        violet:
          - razao: "The cob.valor.original field does not respect the _schema_."
            property: "cob.value.original"
    OperacaoInvalidaCobExample1:
      summary: "Example error from request 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/CobOperacaoInvalida
        title: "Invalid operation."
        status: 400
        detail: "The request that seeks to change or create a charge for immediate payment does not respect the _schema_ or is semantically wrong."
    RequisicaoInvalidaCobVExample1:
      summary: "Example error from request 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/CobVOperacaoInvalida
        title: "Invalid charge."
        status: 400
        detail: "The request that seeks to change or create an expiring charge does not respect the _schema_ or is semantically wrong."
        violet:
          - razao: "The object cobv.devedor does not respect the _schema_."
            property: "cobv.debtor"
    OperacaoInvalidaCobVExample1:
      summary: "Example error from request 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/CobVOperacaoInvalida
        title: "Invalid operation."
        status: 400
        detail: "Billing is no longer in ACTIVE status, only active billings can be reviewed."
    RequisicaoInvalidaCobPayloadExample1:
      summary: "Example error from request 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/CobPayloadNaoEncontrado
        title: "Charge not found."
        status: 404
        detail: "The charge in question was not found for the requested location."
    RequisicaoInvalidaLoteCobVExample1:
      summary: "Example error from request 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/LoteCobVOperacaoInvalida
        title: "Invalid billing batch."
        status: 400
        detail: "The request that seeks to change or create a batch of charges due does not respect the _schema_ or is semantically wrong."
        violet:
          - razao: "The loteCobV.cobsV object does not respect the _schema_."
            property: "lotCobV.cobsV"
          - razao: "The loteCobV.descricao field does not respect the _schema_."
            property: "lotCobV.description"
    Invalid RequestReturnExample1:
      summary: "Example error from request 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/PixDevolucaoInvalida
        title: "Invalid return."
        status: 400
        detail: "This return request does not respect the _schema_ or does not make sense semantically."
    RequisicaoInvalidaWebhookExample1:
      summary: "Example error from request 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/WebhookOperacaoInvalida
        title: "Invalid webhook."
        status: 400
        detail: "The present request seeks to create a webhook without respecting the _schema_ or, even, with semantically invalid meaning."
    RequisicaoInvalidaLocationExample1:
      summary: "Example error from request 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/PayloadLocationOperacaoInvalida
        title: "Invalid PayloadLocation."
        status: 400
        detail: "This request seeks to create a location without respecting the established _schema_."
    AccessDeniedExample1:
      summary: "Example error from request 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/AcessoNegado
        title: "Access Denied"
        status: 403
        detail: "Authenticated participant request that violates an authorization rule."
    NaoEncontradoExample1:
      summary: "Example error from request 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/NaoEncontrado
        title: "Not Found"
        status: 404
        detail: "Entity not found."
    ServicoIndisponivelExample1:
      summary: "Example error from request 1"
      value:
        type: https://pix.bcb.gov.br/api/v2/error/ServicoIndisponivel
        title: "Service Unavailable"
        status: 503
        detail: "Service is currently unavailable. Requested service may be down for maintenance or out of service window."
  requestBodies:
    CobBody:
      description: "Data for generating immediate billing."
      required: true
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/CobSolicitada"
          examples:
            example1:
              $ref: "#/components/examples/cobBody2"
            exemplo2:
              $ref: "#/components/examples/cobBody6"
            exemplo3:
              $ref: "#/components/examples/cobBody8"
            exemplo4:
              $ref: "#/components/examples/cobBody9"
    CobVBody:
      description: "Data for generating the charge due."
      required: true
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/CobVSolicitada"
          examples:
            example1:
              $ref: "#/components/examples/cobBody1"
    LoteCobVBody:
      description: "Data for generating a batch of charges due."
      required: true
      content:
        "application/json":
          schema:
            required: ["description", "cobsv"]
            properties:
              description:
                type: "string"
                title: "Batch Description"
              cobsv:
                type: "array"
                items:
                  allOf:
                    - type: "object"
                      required: ["txid"]
                      properties:
                        xid:
                          $ref: "#/components/schemas/TxId"
                    - $ref: "#/components/schemas/CobVSolicitada"
          examples:
            example1:
              $ref: "#/components/examples/loteCobVBody1"
    LoteCobVBodyRevisado:
      description: "Data for generating a batch of charges due."
      required: true
      content:
        "application/json":
          schema:
            properties:
              description:
                type: "string"
                title: "Batch Description"
              cobsv:
                type: "array"
                items:
                  allOf:
                    - type: "object"
                      required: ["txid"]
                      properties:
                        xid:
                          $ref: "#/components/schemas/TxId"
                    - $ref: "#/components/schemas/CobVRevisada"
          examples:
            example1:
              $ref: "#/components/examples/loteCobVBodyRevisado1"
    CobBodyRevised:
      description: "Data for billing generation."
      required: true
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/CobRevisada"
          examples:
            example1:
              $ref: "#/components/examples/cobBody3"
            exemplo2:
              $ref: "#/components/examples/cobBody4"
            exemplo3:
              $ref: "#/components/examples/cobBody5"
    CobVBody Revised:
      description: "Data for billing generation."
      required: true
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/CobVRevisada"
          examples:
            example1:
              $ref: "#/components/examples/cobBody7"
            exemplo2:
              $ref: "#/components/examples/cobBody4"
            exemplo3:
              $ref: "#/components/examples/cobBody5"
    PayloadLocationBody:
      description: "Data for generating the location."
      required: true
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/PayloadLocationSolicitada"
          examples:
            example1:
              $ref: "#/components/examples/payloadLocationBody1"
    DevolucaoBody:
      description: "Data for return request."
      required: true
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/DevolucaoSolicitada"
          examples:
            example1:
              $ref: "#/components/examples/devolucaoSolicitada1"
    WebhookConfigBody:
      required: true
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/WebhookSolicitado"
          examples:
            example1:
              $ref: "#/components/examples/webhookBody1"
    WebhookPixBody:
      description: "Data for Pix notification."
      required: true
      content:
        "application/json":
          schema:
            properties:
              pix:
                type: "array"
                items:
                  $ref: "#/components/schemas/Pix"
                example:
                  - allOf:
                      - $ref: "#/components/examples/pixWebhook1/value"
                  - allOf:
                      - $ref: "#/components/examples/pixWebhook2/value"
  schemas:
    TxId:
      type: "string"
      title: "Transaction Id"
      description: |
        # transaction identifier

        The `txid` field determines the transaction identifier.
        The purpose of this field is to be an element that allows the recipient's PSP to present the payment reconciliation functionality to the receiving user.

        In pacs.008, it is referred to as `TransactionIdentification <txId>` or `idConciliacaoRecebedor`.

        In terms of the operating flow, the txid is read by the payer's PSP application and,
        after payment is confirmed, it is sent to SPI via pacs.008.
        A pacs.008 is also sent to the recipient's PSP, containing, in addition to all the usual information
        of payment, the txid.
        Upon perceiving a receipt with txid, the receiver's PSP is able to communicate with the receiving user,
        stating that a specific payment has been settled.

        The txid is created exclusively by the receiving user and is under his/her responsibility.
        The txid, in the context of representing a charge, is unique per CPF/CNPJ of the receiving user. It's up to
        Recipient PSP validate this rule in Pix API.
      pattern: "[a-zA-Z0-9]{26,35}"
    EndToEndId:
      type: "string"
      title: "End-to-end transaction id"
      description: "EndToEndIdentification que transita na PACS002, PACS004 e PACS008"
      pattern: "[a-zA-Z0-9]{32}"
      minLength: 32
      maxLength: 32
    DevolucaoId:
      type: "string"
      title: "Return Id"
      description: "Id generated by the customer to uniquely represent a return."
      pattern: "[a-zA-Z0-9]{1,35}"
    Return Requested Nature:
      type: "string"
      title: "Nature of Requested Return"
      description: |
        Indicates the nature of the requested return. A return request by the receiving user can be related to a Pix
         (with code: `MD06` from pacs.004), or to a Loot or Change Pix (with possible codes: `MD06` and `SL02` from pacs.004). in the absence
         from this field the nature must be interpreted as being from a common Pix (`ORIGINAL`).

        Natures are defined as follows:
        - `ORIGINAL`: when the return is requested by the receiving user and refers to a common Pix or the purchase price in a Pix Change (`MD06`);
        - `WITHDRAWAL`: when the return is requested by the receiving user and refers to a Pix Withdrawal or the value of change in a Pix Change (`SL02`).

        Return amounts are always limited to the following maximum amounts:
        - Common Pix: the value of the return is limited to the value of the Pix itself (in this case, the nature must be: ORIGINAL);
        - Pix Loot: the value of the return is limited to the value of the withdrawal (the nature in this case must be: WITHDRAWAL); It is
        - Pix Troco: the value of the return is limited to the amount related to the purchase or change:
          - When the return refers to the purchase, the value is limited to the purchase price (in this case, the nature must be ORIGINAL); It is
          - When the return refers to the change, the value is limited to the value of the change (the nature in this case must be WITHDRAWN).

      enum:
        - "ORIGINAL"
        - "WITHDRAWAL"
    Devolution Nature:
      type: "string"
      title: "Nature of Return"
      description: |
        Indicates the nature of the return. A return can be related to a common Pix (with possible codes: `MD06`, `BE08` and `FR01` from pacs.004),
        or to a Loot or Change Pix (with possible codes: `MD06` and `SL02` from pacs.004). In the absence of this field, nature must be interpreted as
        being from a common Pix (`ORIGINAL`).

        Natures are defined as follows:
          - `ORIGINAL`: when the return is requested by the receiving user and refers to a common Pix or the purchase price in a Pix Change (`MD06`);
          - `WITHDRAWAL`: when the return is requested by the receiving user and refers to a Pix Withdrawal or the value of change in a Pix Change (`SL02`);
          - `MED_OPERACIONAL`: when the return occurs within the scope of the MED due to operational failure and refers to a common Pix (`BE08`);
          - `MED_FRAUDE`: when the return takes place within the scope of the MED on grounds of suspected fraud and refers to a common Pix (`FR01`).

        Return amounts are always limited to the following maximum amounts:
        - Common Pix: the value of the return is limited to the value of the Pix itself (the nature in this case can be: ORIGINAL, MED_OPERACIONAL or MED_FRAUDE);
        - Pix Loot: the value of the return is limited to the value of the withdrawal (the nature in this case must be: WITHDRAWAL); It is
        - Pix Troco: the value of the return is limited to the amount related to the purchase or change:
          - When the return refers to the purchase, the value is limited to the purchase price (in this case, the nature must be ORIGINAL); It is
          - When the return refers to the change, the value is limited to the value of the change (the nature in this case must be WITHDRAWN).

      enum:
        - "ORIGINAL"
        - "WITHDRAWAL"
        - "MED_OPERACIONAL"
        - "WITH_FRAUD"
    PayloadLocationId:
      type: "integer"
      format: "int64"
      title: "Id da location"
      description: "Identifier of the location to be informed when creating the charge."
      readOnly: true
    Revision:
      type: "integer"
      format: "int32"
      title: "Review"
      description: |
        # The `revision` field

        Denotes the charge review. It always starts at zero. It always varies in increments of 1.

        The increment in a charge must occur whenever an object of the charge in question is changed.
        The `loc` field is an exception to this rule.

        If in a given change to a charge, the only field changed is the `loc` field,
        so this operation does not increment the charge review.

        The `loc` field does not change the charge itself.
        It is not necessary to store history of `loc` field changes for a given charge.
        For the other billing fields, record history.
      readOnly: true
    Physical person:
      type: "object"
      required: ["cpf", "nome"]
      title: "Individual"
      properties:
        cpf:
          type: "string"
          title: "CPF"
          pattern: "/^\\d{11}$/"
          description: "User ID number."
        name:
          type: "string"
          title: "Name"
          description: "Username."
          maxLength: 200
    Legal person:
      type: "object"
      required: ["cnpj", "name"]
      title: "Legal Entity"
      properties:
        CNPJ:
          type: "string"
          title: "CNPJ"
          pattern: "/^\\d{14}$/"
          description: "User's CNPJ."
        name:
          type: "string"
          title: "Name"
          description: "Username."
          maxLength: 200
    Complementary DataPerson:
      type: "object"
      properties:
        public place:
          type: "string"
          title: "Background"
          description: "User's home."
          maxLength: 200
        city:
          type: "string"
          title: "City"
          description: "User's city."
          maxLength: 200
        uf:
          type: "string"
          title: "UF"
          description: "User UF."
          maxLength: 2
        pocket:
          type: "string"
          title: "CEP"
          description: "User zip code."
          maxLength: 8
    Debtor Data:
      type: "object"
      properties:
        debtor:
          description: "The debtor object organizes information about the debtor of the charge."
          oneOf:
            - $ref: "#/components/schemas/PessoaFisica"
            - $ref: "#/components/schemas/PessoaJuridica"
          allOf:
            - type: "object"
              properties:
                email:
                  type: "string"
                  title: "Email"
                  description: "User email."
            - $ref: "#/components/schemas/DadosComplementaresPessoa"
    DiceReceiver:
      type: "object"
      required: ["street", "town", "uf", "zip"]
      properties:
        receiver:
          description: "The receiving object organizes the information about the creditor of the charge."
          oneOf:
            - $ref: "#/components/schemas/PessoaFisica"
            - type: "object"
              allOf:
                - $ref: "#/components/schemas/PessoaJuridica"
                - type: "object"
                  properties:
                    nomeFantasia:
                      type: "string"
                      title: "Invented name"
                      description: "Invented name."
                      maxLength: 200
          allOf:
            - required: ["street", "city", "uf", "zip"]
            - $ref: "#/components/schemas/DadosComplementaresPessoa"
    Webhook Request:
      type: "object"
      required: ["webhookUrl"]
      title: "Webhook"
      properties:
        webhookUrl:
          type: string
          format: uri
          example: https://pix.example.com/api/webhook/
    Webhook Complete:
      type: "object"
      required: ["webhookUrl", "key", "creation"]
      title: "Webhook"
      properties:
        webhookUrl:
          type: string
          format: uri
          example: https://pix.example.com/api/webhook/
        key:
          type: "string"
          title: "Recipient's DICT Key"
          description: |
            # Key field format

            * The key field determines the Pix key registered in the DICT that will be used for billing. This key will be read by the payer's PSP application to query the DICT, which will return the information that will identify the billing recipient.
            * Key types can be: phone, email, cpf/cnpj or EVP.
            * The format of the keys can be found in the section "Formatting DICT keys in the BR Code" of the [Pix Initiation Standards Manual](https://www.bcb.gov.br/estabilidadefinanceira/pix).
          maxLength: 77
        creation:
          type: "string"
          format: "date-time"
          title: "Creation Date"
          description: "Date and time the webhook was registered. Respects RFC 3339."
          readOnly: true
    CobExpiration:
      type: "object"
      title: "Expiration"
      properties:
        expiration:
          type: "integer"
          format: "int32"
          title: "Charge lifetime, specified in seconds."
          description: |
            Charge lifetime, specified in seconds from the creation date (Calendar.creation)
          example: "3600"
          default: "86400"
    ExpirationDate Fee:
      type: "object"
      title: "Expiry Date"
      required: ["dateDeVencimento"]
      properties:
        due date:
          type: "string"
          format: "date"
          title: "Bill Expiration Date"
          description: "This is a date, in `YYYY-MM-DD` format, as per ISO 8601. It is the billing due date. The billing can be honored up to and including that day, at any time of the day."
          example: "2020-04-01"
        validityAfterExpiry:
          type: "integer"
          format: "int32"
          title: "Expiry after expiration"
          description: |
            This is the number of consecutive days after calendario.dataDeVencimento,
            which the charge may be paid.

            Whenever the due date falls on a weekend or holiday for the paying user,
             it should be automatically rolled over to the first subsequent business day. all fields
             that make reference to this date (`validityAfterExpiry`; `discount`; `interest` and `fine`) must assume
             this extension, if applicable.

            To illustrate how it works, here are some examples:
            - ``(#)`` represents the expiration date;
            - ``(*)`` represents the date adjusted for non-working days;
            - the ``(<number>)`` correspond to the additional days of validity for the payment.

            Example A:

            ```txt
            ExpirationDate: 2020-10-20, Tuesday.
            validityAfterExpiry: 4

            Try to pay on 2020-10-20, Tuesday: accepted. (#)(*)
            Try to pay on 2020-10-21, Wednesday: accepted. (1)
            Try to pay on 2020-10-22, Thursday: accepted. (two)
            Try to pay on 2020-10-23, Friday: accepted. (3)
            Try to pay on 2020-10-24, Saturday: accepted.
            Try to pay on 10-25-2020, Sunday: accepted. (Holiday)
            Try to pay on 2020-10-26, Monday: accepted. (4)
            Trying to pay on 2020-10-27, Tuesday: denied.
            ```

            Example B:

            ```txt
            ExpirationDate: 2020-12-25, Friday, public holiday.
            validityAfterExpiry: 0

            Try to pay on 2020-12-25, Friday: accepted. (#)(Holiday)
            Try to pay on 2020-12-26, Saturday: accepted.
            Try to pay on 2020-12-27, Sunday: accepted.
            Try to pay on 2020-12-28, Monday: accepted. (*)
            Trying to pay on 2020-12-29, Tuesday: denied.
            ```

            Example C:

            ```txt
            ExpirationDate: 2020-12-25, Friday, public holiday.
            validityAfterExpiry: 1

            Try to pay on 2020-12-25, Friday: accepted. (#)(Holiday)
            Try to pay on 2020-12-26, Saturday: accepted.
            Try to pay on 2020-12-27, Sunday: accepted.
            Try to pay on 2020-12-28, Monday: accepted. (*)
            Try to pay on 2020-12-29, Tuesday: accepted. (1)
            Trying to pay on 12-30-2020, Wednesday: denied.
            ```

            Example D:

            ```txt
            ExpirationDate: 2020-12-25, Friday, public holiday.
            validityAfterExpiry: 3

            Try to pay on 2020-12-25, Friday: accepted. (#)(Holiday)
            Try to pay on 2020-12-26, Saturday: accepted.
            Try to pay on 2020-12-27, Sunday: accepted.
            Try to pay on 2020-12-28, Monday: accepted. (*)
            Try to pay on 2020-12-29, Tuesday: accepted. (1)
            Try to pay on 12-30-2020, Wednesday: accepted. (two)
            Try to pay on 12-31-2020, Thursday: accepted. (3)
            Try to pay on 01-01-2021, Friday: denied.
            ```

            Example E:

            ```txt
            ExpirationDate: 2020-12-25, Friday, public holiday.
            validityAfterExpiry: 4

            Try to pay on 2020-12-25, Friday: accepted. (#)(Holiday)
            Try to pay on 2020-12-26, Saturday: accepted.
            Try to pay on 2020-12-27, Sunday: accepted.
            Try to pay on 2020-12-28, Monday: accepted. (*)
            Try to pay on 2020-12-29, Tuesday: accepted. (1)
            Try to pay on 12-30-2020, Wednesday: accepted. (two)
            Try to pay on 12-31-2020, Thursday: accepted. (3)
            Try to pay on 01-01-2021, Friday: accepted. (Holiday)
            Try to pay on 01-02-2021, Saturday: accepted.
            Try to pay on 01-03-2021, Sunday: accepted.
            Try to pay on 01-04-2021, Monday: accepted. (4)
            Trying to pay on 01-05-2021, Tuesday: denied.
            ```

            Example F:

            ```txt
            ExpirationDate: 2021-08-27, Friday.
            validityAfterExpiry: 5

            Try to pay on 2021-08-27, Friday: accepted. (#)(*)
            Try to pay on 2021-08-28, Saturday: accepted. (1)
            Try to pay on 2021-08-29, Sunday: accepted. (two)
            Try to pay on 08-30-2021, Monday: accepted. (3)
            Try to pay on 08-31-2021, Tuesday: accepted. (4)
            Try to pay on 09/01/2021, Wednesday: accepted. (5)
            Trying to pay on 2021-09-02, Thursday: denied.
            ```

            Example G:

            ```txt
            expiration date: 2021-08-28, Saturday.
            validityAfterExpiry: 5

            Try to pay on 2021-08-28, Saturday: accepted. (#)
            Try to pay on 2021-08-29, Sunday: accepted.
            Try to pay on 08-30-2021, Monday: accepted. (*)
            Try to pay on 08-31-2021, Tuesday: accepted. (1)
            Try to pay on 09/01/2021, Wednesday: accepted. (two)
            Try to pay on 2021-09-02, Thursday: accepted. (3)
            Try to pay on 09/03/2021, Friday: accepted. (4)
            Try to pay on 09/04/2021, Saturday: accepted.
            Try to pay on 5/9/2021, Sunday: accepted.
            Try to pay on 09-06-2021, Monday: accepted. (5)
            ```
          default: 30
    CobPresentation:
      type: "object"
      title: "Presentation"
      required: ["presentation"]
      properties:
        presentation:
          type: "string"
          format: "date-time"
          title: "QR Code presentation timestamp"
          description: "Timestamp that indicates the moment when the JSON payload representing the charge was retrieved. That is, ideally, it is the moment when the user captured the QR Code to verify the payment data. It respects the format defined in the RFC 3339."
    CobCreation:
      type: "object"
      title: "Creation"
      required: ["creation"]
      properties:
        creation:
          type: "string"
          format: "date-time"
          title: "Creation Date"
          description: "Timestamp that indicates when the charge was created. It respects the format defined in RFC 3339."
    CobVValor:
      type: "object"
      title: "Charge amount due"
      description: "Monetary amounts."
      properties:
        original:
          type: "string"
          title: "Valor"
          pattern: "\\d{1,10}\\.\\d{2}"
          description: "Original charge amount."
        a lot:
          type: "object"
          required: ["modality", "percvalue"]
          title: "Fine applied"
          description: "Fine applied to billing"
          properties:
            modality:
              type: "integer"
              format: "int32"
              title: "Type of fine"
              minimum: 1
              maximum: 2
              description: |
                ##### Type of fine, according to the domain table.
                <table><tr><th>Description</th><th>Domain</th></tr><tr><td>Fixed Value</td><td>1</td></tr> <tr><td>Percentage</td><td>2</td></tr></table>
            valuePerc:
              type: "string"
              title: "Amount of the absolute fine"
              description: 'Document fine in absolute or percentage value, according to "value.fine.modality".'
              pattern: "\\d{1,10}\\.\\d{2}"
        fees:
          type: "object"
          required: ["modality", "percvalue"]
          title: "Applied interest"
          description: "Interest applied to charge"
          properties:
            modality:
              type: "integer"
              format: "int32"
              minimum: 1
              maximum: 8
              title: "Interest method"
              description: |
                ##### Type of interest, according to the domain table.
                <table><tr><th>Description</th><th>Domain</th></tr><tr><td>Value (calendar days)</td><td>1</td>< /tr><tr><td>Percent per day (calendar days)</td><td>2</td></tr><tr><td>Percent per month (calendar days)</td>< td>3</td></tr><tr><td>Percentage per year (calendar days)</td><td>4</td></tr><tr><td>Amount (working days )</td><td>5</td></tr><tr><td>Percent per day (working days)</td><td>6</td></tr><tr>< td>Percentage per month (working days)</td><td>7</td></tr><tr><td>Percentage per year (working days)</td><td>8</td> </tr></table>
            valuePerc:
              type: "string"
              title: "Valor"
              pattern: "\\d{1,10}\\.\\d{2}"
        rebate:
          title: "Abatement applied"
          required: ["modality", "percvalue"]
          description: "Abatement applied to billing"
          properties:
            modality:
              type: "integer"
              format: "int32"
              minimum: 1
              maximum: 2
              title: "Rebates method"
              description: |
                ##### Type of rebates, according to the domain table.
                <table><tr><th>Description</th><th>Domain</th></tr><tr><td>Fixed Value</td><td>1</td></tr> <tr><td>Percentage</td><td>2</td></tr></table>
            valuePerc:
              type: "string"
              title: "Rebates"
              description: "Allowances or other deductions applied to the document, in absolute value or percentage of the document's original value."
              pattern: "\\d{1,10}\\.\\d{2}"
        discount:
          title: "Discounts Applied"
          required: ["modality"]
          description: "Discounts applied to billing"
          allOf:
            - type: "object"
              properties:
                modality:
                  type: "integer"
                  format: "int32"
                  minimum: 1
                  maximum: 6
                  title: "Discount method"
                  description: |
                    ##### Discount method, according to domain table.
                    <table><tr><th>Description</th><th>Domain</th></tr><tr><td>Fixed value until the informed date[s]</td ><td>1</td></tr><tr><td>Percentage up to the informed date</td><td>2</td></tr><tr><td>Amount per day in advance run</td><td>3</td></tr><tr><td>Value in advance working day</td><td>4</td></tr><tr><td> Percentage for calendar day anticipation</td><td>5</td></tr><tr><td>Percentage for working day anticipation</td><td>6</td></tr></ table>

          oneOf:
            - type: "object"
              properties:
                discountFixDate:
                  title: "Discount List"
                  description: "Absolute discounts applied to billing."
                  type: "array"
                  minItems: 1
                  maxItems: 3
                  uniqueItems: true
                  items:
                    required: ["data", "valorPerc"]
                    allOf:
                      - properties:
                          data:
                            title: "Date for Absolute Billing Discount"
                            description: 'Fixed date early payment discounts. Array with up to three elements, each element consisting of a pair "date and valuePerc", to establish percentage or absolute discounts, until that payment date. It is a date, in `YYYY-MM-DD` format, according to ISO 8601. The discount date must be less than or equal to the billing due date.'
                            type: "string"
                            format: "date"
                            example: "2020-04-01"
                      - properties:
                          valuePerc:
                            type: "string"
                            title: "Absolute discount amount"
                            description: "Discount in absolute value or percentage per day, business or consecutive, according to value.discount.modality"
                            pattern: "\\d{1,10}\\.\\d{2}"
            - type: "object"
              required: ["valorPerc"]
              properties:
                valuePerc:
                  type: "string"
                  title: "Rebates"
                  description: "Allowances or other deductions applied to the document, in absolute value or percentage of the document's original value."
                  pattern: "\\d{1,10}\\.\\d{2}"

    CobValue:
      type: "object"
      title: "Immediate billing amount"
      description: "monetary amounts referring to the charge."
      properties:
        original:
          type: "string"
          title: "Valor"
          pattern: "\\d{1,10}\\.\\d{2}"
          description: "Original charge amount."
        modalityChange:
          type: "integer"
          format: "int32"
          minimum: 0
          maximum: 1
          title: "Modification of modification"
          description: "This is a field that determines whether the final value of the document can be changed by the payer. If this field is not available, it is assumed that the value of the billing document cannot be changed, that is, it assumes the value 0. If the field is present and with value 1, then it is determined that the final value of the charge can have its value changed by the payer."
        withdrawal:
          description: |
            It is an optional structure related to the concept of receiving cash. Only one grouping at a time is allowed, when there is `withdrawal` there is not `change` and vice versa.

            When an immediate collection has a `withdrawal` structure, it is no longer considered a common Pix and becomes a Pix Loot or Pix Change.

            For the completion of the `withdrawal` object to be considered valid, the following rules apply:
            - the `modalidadeAgente` and `pretadorDoServicoDeSaque` fields are **mandatory**;
            - when the `withdrawal` is present, the collection must respect the following conditions:
              - The field `valor.original` must be filled in with **value equal to 0.00 (zero)**;
              - The `valor.modalidadeAlteracao` field must have the value 0 (zero) explicitly, or implicitly (by not completing it).
            - when `change` is present, the collection must respect the following conditions:
              - The field `valor.original` must be filled in with **value greater than 0.00 (zero)**;
              - The `valor.modalidadeAlteracao` field must have the value 0 (zero) explicitly, or implicitly (by not completing it).

            **IMPORTANT**: When using `withdrawal` or `change`, it will not be allowed to change the `original.value` received. In the presence of `withdrawal` or `change`, receiving the field `valor.modalidadeAlteracao` with a value of 1 (one) is considered an error.

            #### Valid examples:
            Considering the fields of the structure `value` and the predicate 'present' whose result is true when the pointed structure is found we have:
            - **a charge with a fixed amount** (conditions: value.original > 0 && value.change modality = 0 && !gift(value.withdrawal))
              ```
              ...
              "value": {
                "original": "10.00"
              },
              ...
              ```
            - **a charge with changeable amount** (conditions: original.value >= 0.00 && modalityChange = 1 && !gift(withdrawal.value))
              ```
              ...
              "value": {
                "original": "10.00",
                "ModificationChange": 1
              },
              ```
            - **fixed amount withdrawal** (conditions: original.value = 0.00 && alteration.value = 0 && present(withdrawal.amount) && withdrawal.amount.value > 0 && alteration.withdrawal.value. = 0)
              ```
              ...
              "value": {
                "original": "0.00",
                "withdrawal": {
                  "withdraw": {
                    "value": "5.00",
                    "agentmode": "AGPSS",
                    "prestadorDoServicoDeSaque": "12345678"
                  }
                }
              },
              ...
              ```
            - **withdrawal with changeable amount** (conditions: original.value = 0.00 && alteration.value = 0 && present(withdrawal.withdrawal.value) && withdrawal.withdrawal.value.value >= 0 && withdrawal.withdrawal.value. ModalityChange = 1)
              ```
              ...
              "value": {
                "original": "0.00",
                "withdrawal": {
                  "withdraw": {
                    "value": "5.00",
                    "ChangeMode": 1,
                    "agentmode": "AGPSS",
                    "prestadorDoServicoDeSaque": "12345678"
                  }
                }
              },
              ...
              ```
            - **charge with fixed change** (conditions: original.value > 0.00 && value.change modality = 0 && present(value.withdrawal.change) && value.withdrawal.change.value > 0 && value.withdrawal.change.change.modalityChange = 0)
              ```
              ...
              "value": {
                "original": "10.00",
                "withdrawal": {
                  "change": {
                    "value": "5.00",
                    "modeAgent": "AGTEC",
                    "prestadorDoServicoDeSaque": "12345678"
                  }
                }
              },
              ...
              ```
            - **charge with changeable change** (conditions: original.value > 0.00 && alteration.value = 0 && present(change.withdrawal.value) && withdrawal.change.value >= 0 && change.withdrawal.value. ModalityChange = 1)
              ```
              ...
                "value": {
                  "original": "10.00",
                  "withdrawal": {
                    "change": {
                      "value": "0.00",
                      "ChangeMode": 1,
                      "modeAgent": "AGTEC",
                      "prestadorDoServicoDeSaque": "12345678"
                    }
                  }
                },
              ...
              ```
            #### Invalid examples:
            Below are some examples that are **not valid**. It should be noted that this list does not claim to be complete, being only a reference to some possible errors.
            - **Withdrawal without `ModalityAgent` and `ProvidedorDoServicoDeSaque`**
              ```
              ...
              "value": {
                "original": "0.00",
                "withdrawal": {
                  "withdraw": {
                    "value": "5.00"
                  }
                }
              },
              ...
              ```
            - **charge with withdrawal and change together** (you cannot have both at the same time)
              ```
              ...
              "value": {
                "original": "100.00",
                "withdrawal": {
                  "withdraw": {
                    "value": "50.00",
                    "agentmode": "AGPSS",
                    "prestadorDoServicoDeSaque": "12345678"
                  },
                  "change": {
                    "value": "30.00",
                    "modeAgent": "AGTEC",
                    "prestadorDoServicoDeSaque": "12345678"
                  }
                }
              },
              ...
              ```
            - **withdrawal with original.value greater than 0.00 (zero)** (withdrawal requires original.value = 0.00)
              ```
              ...
              "value": {
                "original": "10.00",
                "withdrawal": {
                  "withdraw": {
                    "value": "5.00",
                    "agentmode": "AGPSS",
                    "prestadorDoServicoDeSaque": "12345678"
                  }
                }
              },
              ...
              ```
            - **change with original.value equal to 0.00 (zero)** (to have change there must be original.value > 0.00)
              ```
              ...
              "value": {
                "original": "0.00",
                "withdrawal": {
                  "change": {
                    "value": "5.00",
                    "modeAgent": "AGTEC",
                    "prestadorDoServicoDeSaque": "12345678"
                  }
                }
              },
              ...
              ```
            - **withdrawal with changeable.originalvalue** (you cannot change the original.value in the presence of the withdrawal)
              ```
              ...
              "value": {
                "original": "0.00",
                "ChangeMode": 1,
                "withdrawal": {
                  "withdraw": {
                    "value": "5.00",
                    "ChangeMode": 1,
                    "agentmode": "AGPSS",
                    "prestadorDoServicoDeSaque": "12345678"
                  }
                }
              },
              ...
              ```
            - **change with changeable.original value** (you cannot change the original value when change is present)
              ```
              ...
              "value": {
                "original": "0.01",
                "ChangeMode": 1,
                "withdrawal": {
                  "change": {
                    "value": "5.00",
                    "ChangeMode": 1,
                    "agentmode": "AGTOT",
                    "prestadorDoServicoDeSaque": "12345678"
                  }
                }
              },
              ...
              ```
          title: "Withdrawal information"
          type: "object"
          oneOf:
            - type: "object"
              properties:
                withdraw:
                  type: "object"
                  title: "Serve"
                  required:
                    ["value", "modalidadeAgente", "prestadorDoServicoDeSaque"]
                  description: "Withdrawal-related information"
                  properties:
                    value:
                      type: "string"
                      title: "Withdrawal value"
                      pattern: "\\d{1,10}\\.\\d{2}"
                      description: "Amount of withdrawal made"
                    modalityChange:
                      type: "integer"
                      format: "int32"
                      minimum: 0
                      maximum: 1
                      default: 0
                      title: "Modification of withdrawal"
                      description: "Modality for changing the withdrawal amount. When not filled in, the default value is 0 (zero)."
                    modalityAgent:
                      type: "string"
                      title: "Agent Modality"
                      description: |
                        ##### Type of Agent
                        <table><tr><th>SIGLA</th><th>Description</th></tr><tr><td>AGTEC</td><td>Commercial Establishment Agent</td></tr ><tr><td>AGTOT</td><td>Agent Other Type of Legal Entity or Correspondent in the Country</td></tr><tr><td>AGPSS</td><td>Facilitating Agent of Withdrawal Service (<b>ATTENTION</b>: in the mapping for the field 'modalidadeAgente', from pacs.008, this value must be replaced by <b>AGFSS</b>)</td></tr> </table>
                      enum:
                        - "AGTEC"
                        - "AGTOT"
                        - "AGPSS"
                    providerDoServicoDeSaque:
                      type: "string"
                      title: "Withdrawal Service Facilitator"
                      pattern: "\\d{8}"
                      description: "Withdraw Service Facilitator ISPB"
            - type: "object"
              properties:
                change:
                  type: "object"
                  title: "Change"
                  required:
                    ["value", "modalidadeAgente", "prestadorDoServicoDeSaque"]
                  description: "Change-related information"
                  properties:
                    value:
                      type: "string"
                      title: "Change Amount"
                      pattern: "\\d{1,10}\\.\\d{2}"
                      description: "Amount of change made"
                    modalityChange:
                      type: "integer"
                      format: "int32"
                      minimum: 0
                      maximum: 1
                      default: 0
                      title: "Change change method"
                      description: "Modality for changing the change amount. When not filled in, the default value is 0 (zero)."
                    modalityAgent:
                      type: "string"
                      title: "Agent Modality"
                      description: |
                        ##### Type of Agent
                        <table><tr><th>SIGLA</th><th>Description</th></tr><tr><td>AGTEC</td><td>Commercial Establishment Agent</td></tr ><tr><td>AGTOT</td><td>Agent Other Type of Legal Entity or Correspondent in the Country</td></tr></table>
                      enum:
                        - "AGTEC"
                        - "AGTOT"
                    providerDoServicoDeSaque:
                      type: "string"
                      title: "Withdrawal Service Facilitator"
                      pattern: "\\d{8}"
                      description: "Withdraw Service Facilitator ISPB"
    CobPayloadValor:
      type: "object"
      title: "Amount of immediate charge returned by payload"
      required: ["original"]
      description: "All fields that indicate monetary values ​​follow the pattern \\d{1,10}\\.\\d{2}. The decimal separator is the dot character. It is not applicable to use thousands separator. Examples of values adherent to the standard: “1.00”, “123.99”, “123456789.23"
      properties:
        original:
          type: "string"
          title: "Valor"
          pattern: "\\d{1,10}\\.\\d{2}"
          description: "Original charge amount."
        modalityChange:
          type: "integer"
          format: "int32"
          minimum: 0
          maximum: 1
          title: "Modification of modification"
          description: "This is a field that determines whether the final value of the document can be changed by the payer. If this field is not available, it is assumed that the value of the billing document cannot be changed, that is, it assumes the value 0. If the field is present and with value 1, then it is determined that the final value of the charge can have its value changed by the payer."
        withdrawal:
          description: |
            It is an optional structure related to the concept of receiving cash. Only one grouping at a time is allowed, when there is `withdrawal` there is not `change` and vice versa.

            When an immediate collection has a `withdrawal` structure, it is no longer considered a common Pix and becomes a Pix Loot or Pix Change.

            For the completion of the `withdrawal` object to be considered valid, the following rules apply:
            - the `modalidadeAgente` and `pretadorDoServicoDeSaque` fields are **mandatory**;
            - when the `withdrawal` is present, the collection must respect the following conditions:
              - The field `valor.original` must be filled in with **value equal to 0.00 (zero)**;
              - The `valor.modalidadeAlteracao` field must have the value 0 (zero) explicitly, or implicitly (by not completing it).
            - when `change` is present, the collection must respect the following conditions:
              - The field `valor.original` must be filled in with **value greater than 0.00 (zero)**;
              - The `valor.modalidadeAlteracao` field must have the value 0 (zero) explicitly, or implicitly (by not completing it).

            **IMPORTANT**: When using `withdrawal` or `change`, it will not be allowed to change the `original.value` received. In the presence of `withdrawal` or `change`, receiving the field `valor.modalidadeAlteracao` with a value of 1 (one) is considered an error.

            #### Valid examples:
            Considering the fields of the structure `value` and the predicate 'present' whose result is true when the pointed structure is found we have:
            - **a charge with a fixed amount** (conditions: value.original > 0 && value.change modality = 0 && !gift(value.withdrawal))
              ```
              ...
              "value": {
                "original": "10.00"
              },
              ...
              ```
            - **a charge with changeable amount** (conditions: original.value >= 0.00 && modalityChange = 1 && !gift(withdrawal.value))
              ```
              ...
              "value": {
                "original": "10.00",
                "ModificationChange": 1
              },
              ```
            - **fixed amount withdrawal** (conditions: original.value = 0.00 && alteration.value = 0 && present(withdrawal.amount) && withdrawal.amount.value > 0 && alteration.withdrawal.value. = 0)
              ```
              ...
              "value": {
                "original": "0.00",
                "withdrawal": {
                  "withdraw": {
                    "value": "5.00",
                    "agentmode": "AGPSS",
                    "prestadorDoServicoDeSaque": "12345678"
                  }
                }
              },
              ...
              ```
            - **withdrawal with changeable amount** (conditions: original.value = 0.00 && alteration.value = 0 && present(withdrawal.withdrawal.value) && withdrawal.withdrawal.value.value >= 0 && withdrawal.withdrawal.value. ModalityChange = 1)
              ```
              ...
              "value": {
                "original": "0.00",
                "withdrawal": {
                  "withdraw": {
                    "value": "5.00",
                    "ChangeMode": 1,
                    "agentmode": "AGPSS",
                    "prestadorDoServicoDeSaque": "12345678"
                  }
                }
              },
              ...
              ```
            - **charge with fixed change** (conditions: original.value > 0.00 && value.change modality = 0 && present(value.withdrawal.change) && value.withdrawal.change.value > 0 && value.withdrawal.change.change.modalityChange = 0)
              ```
              ...
              "value": {
                "original": "10.00",
                "withdrawal": {
                  "change": {
                    "value": "5.00",
                    "modeAgent": "AGTEC",
                    "prestadorDoServicoDeSaque": "12345678"
                  }
                }
              },
              ...
              ```
            - **charge with changeable change** (conditions: original.value > 0.00 && alteration.value = 0 && present(change.withdrawal.value) && withdrawal.change.value >= 0 && change.withdrawal.value. ModalityChange = 1)
              ```
              ...
                "value": {
                  "original": "10.00",
                  "withdrawal": {
                    "change": {
                      "value": "0.00",
                      "ChangeMode": 1,
                      "modeAgent": "AGTEC",
                      "prestadorDoServicoDeSaque": "12345678"
                    }
                  }
                },
              ...
              ```
            #### Invalid examples:
            Below are some examples that are **not valid**. It should be noted that this list does not claim to be complete, being only a reference to some possible errors.
            - **Withdrawal without `ModalityAgent` and `ProvidedorDoServicoDeSaque`**
              ```
              ...
              "value": {
                "original": "0.00",
                "withdrawal": {
                  "withdraw": {
                    "value": "5.00"
                  }
                }
              },
              ...
              ```
            - **charge with withdrawal and change together** (you cannot have both at the same time)
              ```
              ...
              "value": {
                "original": "100.00",
                "withdrawal": {
                  "withdraw": {
                    "value": "50.00",
                    "agentmode": "AGPSS",
                    "prestadorDoServicoDeSaque": "12345678"
                  },
                  "change": {
                    "value": "30.00",
                    "modeAgent": "AGTEC",
                    "prestadorDoServicoDeSaque": "12345678"
                  }
                }
              },
              ...
              ```
            - **withdrawal with original.value greater than 0.00 (zero)** (withdrawal requires original.value = 0.00)
              ```
              ...
              "value": {
                "original": "10.00",
                "withdrawal": {
                  "withdraw": {
                    "value": "5.00",
                    "agentmode": "AGPSS",
                    "prestadorDoServicoDeSaque": "12345678"
                  }
                }
              },
              ...
              ```
            - **change with original.value equal to 0.00 (zero)** (to have change there must be original.value > 0.00)
              ```
              ...
              "value": {
                "original": "0.00",
                "withdrawal": {
                  "change": {
                    "value": "5.00",
                    "modeAgent": "AGTEC",
                    "prestadorDoServicoDeSaque": "12345678"
                  }
                }
              },
              ...
              ```
            - **withdrawal with changeable.originalvalue** (you cannot change the original.value in the presence of the withdrawal)
              ```
              ...
              "value": {
                "original": "0.00",
                "ChangeMode": 1,
                "withdrawal": {
                  "withdraw": {
                    "value": "5.00",
                    "ChangeMode": 1,
                    "agentmode": "AGPSS",
                    "prestadorDoServicoDeSaque": "12345678"
                  }
                }
              },
              ...
              ```
            - **change with changeable.original value** (you cannot change the original value when change is present)
              ```
              ...
              "value": {
                "original": "0.01",
                "ChangeMode": 1,
                "withdrawal": {
                  "change": {
                    "value": "5.00",
                    "ChangeMode": 1,
                    "agentmode": "AGTOT",
                    "prestadorDoServicoDeSaque": "12345678"
                  }
                }
              },
              ...
              ```
          title: "Withdrawal Information"
          type: "object"
          oneOf:
            - type: "object"
              properties:
                withdraw:
                  type: "object"
                  title: "Serve"
                  required:
                    ["value", "modalidadeAgente", "prestadorDoServicoDeSaque"]
                  description: "Withdrawal-related information"
                  properties:
                    value:
                      type: "string"
                      title: "Withdrawal amount"
                      pattern: "\\d{1,10}\\.\\d{2}"
                      description: "Amount of withdrawal made"
                    modalityChange:
                      type: "integer"
                      format: "int32"
                      minimum: 0
                      maximum: 1
                      default: 0
                      title: "Modification of withdrawal"
                      description: "Modality for changing the withdrawal amount. When not filled in, the default value is 0 (zero)."
                    modalityAgent:
                      type: "string"
                      title: "Agent Modality"
                      description: |
                        ##### Type of Agent
                        <table><tr><th>SIGLA</th><th>Description</th></tr><tr><td>AGTEC</td><td>Commercial Establishment Agent</td></tr ><tr><td>AGTOT</td><td>Agent Other Type of Legal Entity or Correspondent in the Country</td></tr><tr><td>AGPSS</td><td>Facilitating Agent of Withdrawal Service (<b>ATTENTION</b>: in the mapping for the field 'modalidadeAgente', from pacs.008, this value must be replaced by <b>AGFSS</b>)</td></tr> </table>
                      enum:
                        - "AGTEC"
                        - "AGTOT"
                        - "AGPSS"
                    providerDoServicoDeSaque:
                      type: "string"
                      title: "Withdrawal Service Facilitator"
                      pattern: "\\d{8}"
                      description: "Withdraw Service Facilitator ISPB"
            - type: "object"
              properties:
                change:
                  type: "object"
                  title: "Change"
                  required:
                    ["value", "modalidadeAgente", "prestadorDoServicoDeSaque"]
                  description: "Change-related information"
                  properties:
                    value:
                      type: "string"
                      title: "Change Amount"
                      pattern: "\\d{1,10}\\.\\d{2}"
                      description: "Amount of change made"
                    modalityChange:
                      type: "integer"
                      format: "int32"
                      minimum: 0
                      maximum: 1
                      default: 0
                      title: "Change change method"
                      description: "Modality for changing the change amount. When not filled in, the default value is 0 (zero)."
                    modalityAgent:
                      type: "string"
                      title: "Agent Modality"
                      description: |
                        ##### Type of Agent
                        <table><tr><th>SIGLA</th><th>Description</th></tr><tr><td>AGTEC</td><td>Commercial Establishment Agent</td></tr ><tr><td>AGTOT</td><td>Agent Other Type of Legal Entity or Correspondent in the Country</td></tr></table>
                      enum:
                        - "AGTEC"
                        - "AGTOT"
                    providerDoServicoDeSaque:
                      type: "string"
                      title: "Withdrawal Service Facilitator"
                      pattern: "\\d{8}"
                      description: "Withdraw Service Facilitator ISPB"
    CobVPayloadValor:
      type: "object"
      title: "Calculated due charge amount returned by payload"
      required: ["final"]
      description: "All fields that indicate monetary values ​​follow the pattern \\d{1,10}\\.\\d{2}. The decimal separator is the dot character. It is not applicable to use thousands separator. Examples of values adherent to the standard: “1.00”, “123.99”, “123456789.23"
      properties:
        original:
          type: "string"
          title: "Valor"
          pattern: "\\d{1,10}\\.\\d{2}"
          description: "Original charge amount."
        a lot:
          title: "Fine applied"
          description: "Fine applied to billing"
          type: "string"
          pattern: "\\d{1,10}\\.\\d{2}"
        fees:
          title: "Applied interest"
          description: "Interest applied to charge"
          type: "string"
          pattern: "\\d{1,10}\\.\\d{2}"
        rebate:
          title: "Abatement applied"
          description: "Abatement applied to billing"
          type: "string"
          pattern: "\\d{1,10}\\.\\d{2}"
        discount:
          title: "Discount applied"
          description: "Discounts applied to billing"
          type: "string"
          pattern: "\\d{1,10}\\.\\d{2}"
        final:
          type: "string"
          title: "Valor final"
          pattern: "\\d{1,10}\\.\\d{2}"
          description: "Final charge amount."
    CobBase:
      type: "object"
      title: "Base Billing"
      description: "Attributes common to all Billing entities"
      properties:
        key:
          type: "string"
          title: "Recipient's DICT Key"
          description: |
            # Key field format

            * The key field determines the Pix key registered in the DICT that will be used for billing. This key will be read by the payer's PSP application to query the DICT, which will return the information that will identify the billing recipient.
            * Key types can be: phone, email, cpf/cnpj or EVP.
            * The format of the keys can be found in the section "Formatting DICT keys in the BR Code" of the [Pix Initiation Standards Manual](https://www.bcb.gov.br/estabilidadefinanceira/pix).
          maxLength: 77
        requestPayer:
          type: "string"
          title: "Payer request"
          description: "The optional field solicitacaoPagador determines a text to be presented to the payer so that he can enter related information, in free format, to be sent to the receiver. This text will be filled in, in pacs.008, by the payer's PSP , in the RemittanceInformation field <RmtInf>. The length of the field <RmtInf> in pacs.008 is limited to 140 characters."
          maxLength: 140
        additional info:
          type: "array"
          title: "Additional Information"
          description: "Each respective additional information contained in the list (name and value) must be presented to the payer."
          maximum: 50
          items:
            type: "object"
            required: ["name", "value"]
            properties:
              name:
                type: "string"
                title: "Name"
                description: "Field name."
                maxLength: 50
              value:
                type: "string"
                title: "Valor"
                description: "Field data."
                maxLength: 200
    CobBaseCopyCola:
      type: "object"
      title: "Base Billing with Copy and Paste"
      description: "Attributes common to all Billing entities that have Copy and Paste information"
      allOf:
        - type: "object"
          properties:
            pixCopyECola:
              type: "string"
              title: "Pix Copy and Paste corresponding to the charge."
              description: "This field returns the value of the Pix Copy and Paste corresponding to the charge. It is the sequence of characters that represents the BR Code."
              maxLength: 512
        - $ref: "#/components/schemas/CobBase"
    CobRequested:
      type: "object"
      title: "Immediate billing requested"
      description: "Data sent to create or change immediate billing via API Pix"
      required: ["value", "key", "calendar"]
      allOf:
        - type: "object"
          properties:
            calendar:
              title: "Calendar"
              description: "Fields nested under the calendar identifier organize information regarding billing time tracking."
              allOf:
                - $ref: "#/components/schemas/CobExpiracao"
        - type: "object"
          properties:
            debtor:
              description: "The fields nested under the debtor object are optional and identify the debtor, that is, the person or institution to whom the charge is addressed. It does not necessarily identify who will actually make the payment. A CPF can be the debtor of a collection, but it may happen that another CPF effectively pays the document. It is not allowed for the field `devedor.cpf` and field `devedor.cnpj` to be filled in at the same time. If the field `devedor.cnpj ` is filled in, then the `debtor.cpf` field cannot be filled in, and vice versa. If the `debtor.name` field is filled in, then there must be either a `debtor.cpf` or a `debtor.cnpj` field ` filled."
              oneOf:
                - $ref: "#/components/schemas/PessoaFisica"
                - $ref: "#/components/schemas/PessoaJuridica"
        - type: "object"
          properties:
            place:
              allOf:
                - $ref: "#/components/schemas/PayloadLocationCob"
        - type: "object"
          properties:
            value:
              allOf:
                - required: ["original"]
                - $ref: "#/components/schemas/CobValor"
        - $ref: "#/components/schemas/CobBase"
    CobVRequested:
      type: "object"
      title: "Requested expiry charge"
      description: "Data sent to create or change the charge due via API Pix"
      required: ["value", "key", "debtor", "calendar"]
      allOf:
        - type: "object"
          properties:
            calendar:
              title: "Calendar"
              description: "Fields nested under the calendar identifier organize information regarding billing time tracking."
              allOf:
                - $ref: "#/components/schemas/CobDataDeVencimento"
        - $ref: "#/components/schemas/DadosDevedor"
        - type: "object"
          properties:
            place:
              allOf:
                - $ref: "#/components/schemas/PayloadLocationCob"
        - type: "object"
          properties:
            value:
              allOf:
                - required: ["original"]
                - $ref: "#/components/schemas/CobVValor"
        - $ref: "#/components/schemas/CobBase"
    CobRevised:
      type: "object"
      title: "Revised immediate billing"
      description: "Data sent for immediate billing review via Pix API"
      allOf:
        - type: "object"
          properties:
            calendar:
              title: "Calendar"
              description: "Fields nested under the calendar identifier organize information regarding billing time tracking."
              allOf:
                - $ref: "#/components/schemas/CobExpiracao"
        - type: "object"
          properties:
            debtor:
              description: "The fields nested under the debtor object are optional and identify the debtor, that is, the person or institution to whom the charge is addressed. It does not necessarily identify who will actually make the payment. A CPF can be the debtor of a collection, but it may happen that another CPF effectively pays the document. It is not allowed for the field `devedor.cpf` and field `devedor.cnpj` to be filled in at the same time. If the field `devedor.cnpj ` is filled in, then the `debtor.cpf` field cannot be filled in, and vice versa. If the `debtor.name` field is filled in, then there must be either a `debtor.cpf` or a `debtor.cnpj` field ` filled."
              oneOf:
                - $ref: "#/components/schemas/PessoaFisica"
                - $ref: "#/components/schemas/PessoaJuridica"
        - type: "object"
          properties:
            place:
              allOf:
                - $ref: "#/components/schemas/PayloadLocationCob"
        - type: "object"
          properties:
            status:
              type: "string"
              title: "Billing Record Status"
              enum:
                - "REMOVED_BY_RECEIVE_USER"
        - type: "object"
          properties:
            value:
              $ref: "#/components/schemas/CobValor"
        - $ref: "#/components/schemas/CobBase"
    Revised CobV:
      type: "object"
      title: "Revised due date"
      description: "Data sent for review of the due charge via API Pix"
      allOf:
        - type: "object"
          properties:
            calendar:
              title: "Calendar"
              description: "Fields nested under the calendar identifier organize information regarding billing time tracking."
              allOf:
                - $ref: "#/components/schemas/CobDataDeVencimento"
        - $ref: "#/components/schemas/DadosDevedor"
        - type: "object"
          properties:
            place:
              allOf:
                - $ref: "#/components/schemas/PayloadLocationCob"
        - type: "object"
          properties:
            status:
              type: "string"
              title: "Billing Record Status"
              enum:
                - "REMOVED_BY_RECEIVE_USER"
        - type: "object"
          properties:
            value:
              $ref: "#/components/schemas/CobVValor"
        - $ref: "#/components/schemas/CobBase"
    In CobGera:
      type: "object"
      title: "Immediate charge generated"
      description: "Data created or changed for immediate billing via API Pix"
      required: ["txid", "calendar", "revision", "status", "value", "key"]
      allOf:
        - type: "object"
          properties:
            calendar:
              required: ["expiracao"]
              title: "Calendar"
              description: "Fields nested under the calendar identifier organize information regarding billing time tracking."
              allOf:
                - $ref: "#/components/schemas/CobCriacao"
                - $ref: "#/components/schemas/CobExpiracao"
            xid:
              $ref: "#/components/schemas/TxId"
            revision:
              $ref: "#/components/schemas/Revision"
        - type: "object"
          properties:
            debtor:
              description: "The fields nested under the debtor object are optional and identify the debtor, that is, the person or institution to whom the charge is addressed. It does not necessarily identify who will actually make the payment. A CPF can be the debtor of a collection, but it may happen that another CPF effectively pays the document. It is not allowed for the field `devedor.cpf` and field `devedor.cnpj` to be filled in at the same time. If the field `devedor.cnpj ` is filled in, then the `debtor.cpf` field cannot be filled in, and vice versa. If the `debtor.name` field is filled in, then there must be either a `debtor.cpf` or a `debtor.cnpj` field ` filled."
              oneOf:
                - $ref: "#/components/schemas/PessoaFisica"
                - $ref: "#/components/schemas/PessoaJuridica"
        - type: "object"
          properties:
            place:
              required: ["id", "txid", "tipoCob", "criacao"]
              allOf:
                - $ref: "#/components/schemas/PayloadLocation"
        - type: "object"
          properties:
            location:
              type: "string"
              title: "Payload location"
              description: "Payload location to be informed when creating the charge."
              maxLength: 77
              format: uri
              example: "pix.example.com/qr/v2/2353c790eefb11eaadc10242ac120002"
              readOnly: true
        - type: "object"
          properties:
            status:
              $ref: "#/components/schemas/CobrancaStatus"
        - type: "object"
          properties:
            value:
              required: ["original"]
              allOf:
                - $ref: "#/components/schemas/CobValor"
        - $ref: "#/components/schemas/CobBaseCopiaCola"
    CobVGerada:
      type: "object"
      title: "Due invoice generated"
      description: "Data created or changed for billing due via API Pix"
      required:
        [
          "location",
          "txid",
          "debtor",
          "calendar",
          "revision",
          "status",
          "value",
          "key",
          "receiver",
        ]
      allOf:
        - type: "object"
          properties:
            calendar:
              required: ["validadeAposVencimento"]
              title: "Calendar"
              description: "Fields nested under the calendar identifier organize information regarding billing time tracking."
              allOf:
                - $ref: "#/components/schemas/CobCriacao"
                - $ref: "#/components/schemas/CobDataDeVencimento"
            xid:
              $ref: "#/components/schemas/TxId"
            revision:
              $ref: "#/components/schemas/Revision"
        - $ref: "#/components/schemas/DadosDevedor"
        - $ref: "#/components/schemas/DadosRecebedor"
        - type: "object"
          properties:
            place:
              required: ["id", "txid", "tipoCob", "criacao"]
              allOf:
                - $ref: "#/components/schemas/PayloadLocation"
        - type: "object"
          properties:
            status:
              $ref: "#/components/schemas/CobrancaStatus"
        - type: "object"
          properties:
            value:
              required: ["original"]
              allOf:
                - $ref: "#/components/schemas/CobVValor"
        - $ref: "#/components/schemas/CobBaseCopiaCola"
    BillingStatus:
      type: "string"
      title: "Charge Record Status."
      description: |
        State of the billing record. It is not to be confused with the status of the charge itself, that is, it is not related to the fact that the charge is overdue or expired, for example.

        The statuses are defined as follows:
        - `ACTIVE`: indicates that the record refers to a charge that has been generated but has not yet been paid or removed;
        - `COMPLETED`: indicates that the record refers to a charge that has already been paid and therefore cannot accept another payment;
        - `REMOVIDO_PELO_USUARIO_RECEBEDOR`: indicates that the receiving user requested the removal of the billing record; It is
        - `REMOVIDO_PELO_PSP`: indicates that the Receiving PSP requested the removal of the billing record.
      enum:
        - "ACTIVE"
        - "COMPLETED"
        - "REMOVED_BY_RECEIVE_USER"
        - "REMOVED_BY_PSP"
    LoteCobVGerado:
      title: "Batch of charges with due date generated"
      type: "object"
      required: ["id", "description", "creation", "cobsv"]
      properties:
        id:
          type: "integer"
          format: "int64"
          title: "Id do lote"
        description:
          type: "string"
          title: "Batch Description"
        creation:
          type: "string"
          format: "date-time"
          title: "Batch creation date"
          description: "Timestamp that indicates when the batch was created. It respects the format defined in RFC 3339."
        cobsv:
          type: "array"
          items:
            $ref: "#/components/schemas/CobVGerada"
    CobVComplete:
      title: "Billing due in full"
      required: ["status"]
      allOf:
        - $ref: "#/components/schemas/CobVSolicitada"
        - $ref: "#/components/schemas/CobVGerada"
        - type: "object"
          properties:
            pix:
              type: "array"
              title: "Pix received"
              items:
                allOf:
                  - $ref: "#/components/schemas/Pix"
                  - type: "object"
                    properties:
                      xid:
                        allOf:
                          - $ref: "#/components/schemas/TxId"
                          - pattern: "[a-zA-Z0-9]{26,35}"
        - type: "object"
          properties:
            status:
              $ref: "#/components/schemas/CobrancaStatus"
    CobComplete:
      title: "Complete Immediate Billing"
      required: ["status"]
      allOf:
        - $ref: "#/components/schemas/CobSolicitada"
        - $ref: "#/components/schemas/CobGerada"
        - type: "object"
          properties:
            status:
              $ref: "#/components/schemas/CobrancaStatus"
        - type: "object"
          properties:
            pix:
              type: "array"
              title: "Pix received"
              items:
                allOf:
                  - $ref: "#/components/schemas/Pix"
                  - type: "object"
                    properties:
                      xid:
                        allOf:
                          - $ref: "#/components/schemas/TxId"
                          - pattern: "[a-zA-Z0-9]{26,35}"
    LoteCobVConsultado:
      title: "Batch of requests for change or creation of expiring charges"
      type: "object"
      required: ["id", "description", "creation", "cobsv"]
      properties:
        id:
          type: "integer"
          format: "int64"
          title: "Lot identifier in numeric format."
        description:
          type: "string"
          title: "Batch Description"
        creation:
          type: "string"
          format: "date-time"
          title: "Batch creation date"
          description: "Timestamp that indicates when the batch was created. It respects the format defined in RFC 3339."
        cobsv:
          type: "array"
          items:
            type: "object"
            required: ["txid", "status"]
            properties:
              xid:
                $ref: "#/components/schemas/TxId"
              status:
                type: "string"
                title: "Status of charge creation/change request in batch creation context"
                enum:
                  - "PROCESSING"
                  - "CREATED"
                  - "DENIED"
              problem:
                $ref: "#/components/schemas/Problema"
              creation:
                type: "string"
                format: "date-time"
                title: "Creation Date"
                description: "Date and time the charge was created. Complies with RFC 3339."
                readOnly: true
    CobVBatches consulted:
      title: "Batches of Expired Billing Requests"
      type: "object"
      required: ["parameters", "batches"]
      properties:
        in parameters:
          $ref: "#/components/schemas/ParametrosConsultaLote"
        lots:
          type: "array"
          title: "Batches of Expired Charge Create/Change Requests"
          items:
            allOf:
              - $ref: "#/components/schemas/LoteCobVConsultado"
    CobVPayload:
      type: "object"
      title: "Payload JSON of expiring charge"
      description: "Due billing data accessed by JSON payload"
      required:
        [
          "txid",
          "calendar",
          "revision",
          "status",
          "value",
          "key",
          "debtor",
          "receiver",
        ]
      allOf:
        - type: "object"
          properties:
            calendar:
              title: "Calendar"
              description: "Fields nested under the calendar identifier organize information regarding billing time tracking."
              required: ["creation", "presentation", "validityAfterExpiry"]
              allOf:
                - $ref: "#/components/schemas/CobCriacao"
                - $ref: "#/components/schemas/CobApresentacao"
                - $ref: "#/components/schemas/CobDataDeVencimento"
        - type: "object"
          properties:
            debtor:
              description: "The fields nested under the debtor object are optional and identify the debtor, that is, the person or institution to whom the charge is addressed. It does not necessarily identify who will actually make the payment. A CPF can be the debtor of a charge, but it may happen that another CPF effectively pays the document. It is not allowed for the field `devedor.cpf` and field `devedor.cnpj` to be filled in at the same time. If the field `devedor.cnpj ` is filled in, then the `debtor.cpf` field cannot be filled in, and vice versa. If the `debtor.name` field is filled in, then there must be either a `debtor.cpf` or a `debtor.cnpj` field ` filled."
              oneOf:
                - $ref: "#/components/schemas/PessoaFisica"
                - $ref: "#/components/schemas/PessoaJuridica"
        - $ref: "#/components/schemas/DadosRecebedor"
        - type: "object"
          properties:
            xid:
              $ref: "#/components/schemas/TxId"
            revision:
              $ref: "#/components/schemas/Revision"
        - type: "object"
          properties:
            status:
              $ref: "#/components/schemas/CobrancaStatus"
        - type: "object"
          properties:
            value:
              $ref: "#/components/schemas/CobVPayloadValor"
        - $ref: "#/components/schemas/CobBase"
    CobPayload:
      type: "object"
      title: "Immediate billing JSON payload"
      description: "Immediate billing data accessed by JSON payload"
      required: ["txid", "calendar", "revision", "status", "value", "key"]
      allOf:
        - type: "object"
          properties:
            calendar:
              title: "Calendar"
              description: "Fields nested under the calendar identifier organize information regarding billing time tracking."
              required: ["creation", "presentation", "expiration"]
              allOf:
                - $ref: "#/components/schemas/CobCriacao"
                - $ref: "#/components/schemas/CobApresentacao"
                - $ref: "#/components/schemas/CobExpiracao"
            xid:
              $ref: "#/components/schemas/TxId"
            revision:
              $ref: "#/components/schemas/Revision"
        - type: "object"
          properties:
            debtor:
              description: "The fields nested under the debtor object are optional and identify the debtor, that is, the person or institution to whom the charge is addressed. It does not necessarily identify who will actually make the payment. A CPF can be the debtor of a charge, but it may happen that another CPF effectively pays the document. It is not allowed for the field `devedor.cpf` and field `devedor.cnpj` to be filled in at the same time. If the field `devedor.cnpj ` is filled in, then the `debtor.cpf` field cannot be filled in, and vice versa. If the `debtor.name` field is filled in, then there must be either a `debtor.cpf` or a `debtor.cnpj` field ` filled."
              oneOf:
                - $ref: "#/components/schemas/PessoaFisica"
                - $ref: "#/components/schemas/PessoaJuridica"
        - type: "object"
          properties:
            status:
              $ref: "#/components/schemas/CobrancaStatus"
        - type: "object"
          properties:
            value:
              $ref: "#/components/schemas/CobPayloadValor"
        - $ref: "#/components/schemas/CobBase"
    PayloadLocation:
      type: "object"
      title: "Location do Payload"
      description: "Payload location identifier."
      required: ["id", "location", "tipoCob", "criacao"]
      properties:
        id:
          $ref: "#/components/schemas/PayloadLocationId"
        location:
          type: "string"
          title: "Payload location"
          description: "Payload location to be informed when creating the charge."
          maxLength: 77
          format: uri
          example: "pix.example.com/qr/v2/2353c790eefb11eaadc10242ac120002"
          readOnly: true
        tipoCob:
          type: "string"
          title: "Charge type"
          enum:
            - "cob"
            - "cobv"
        creation:
          type: "string"
          format: "date-time"
          title: "Creation Date"
          description: "Date and time the location was created. Complies with RFC 3339."
          readOnly: true
    PayloadLocationSolicitada:
      type: "object"
      title: "Location do Payload Solicitada"
      description: "Identifier of requested payload location."
      required: ["tipoCob"]
      properties:
        tipoCob:
          type: "string"
          title: "Charge type"
          enum:
            - "cob"
            - "cobv"
    PayloadLocationCompleta:
      type: "object"
      title: "Location do Payload Completa"
      description: "Complete payload location identifier."
      required: ["id", "location", "tipoCob", "criacao"]
      properties:
        id:
          $ref: "#/components/schemas/PayloadLocationId"
        xid:
          $ref: "#/components/schemas/TxId"
        location:
          type: "string"
          title: "Payload location"
          description: "Payload location to be informed when creating the charge."
          maxLength: 77
          format: uri
          example: "pix.example.com/qr/v2/2353c790eefb11eaadc10242ac120002"
          readOnly: true
        tipoCob:
          type: "string"
          title: "Charge type"
          enum:
            - "cob"
            - "cobv"
        creation:
          type: "string"
          format: "date-time"
          title: "Creation Date"
          description: "Date and time the location was created. Complies with RFC 3339."
          readOnly: true
    PayloadLocationCob:
      type: "object"
      title: "Location do Payload"
      required: ["id", "tipoCob"]
      description: "Payload location identifier."
      properties:
        id:
          $ref: "#/components/schemas/PayloadLocationId"
    ParametrosConsultaCob:
      type: "object"
      title: "Billing Query Parameters"
      description: "[DEPRECADO] Parameters used to perform a billing query."
      required: ["start", "end", "pagination"]
      properties:
        start:
          type: "string"
          format: "date-time"
          title: "Start Date"
          description: "Initial date used in the query. Respects RFC 3339."
          example: "2020-04-01T00:00:00Z"
        end:
          type: "string"
          format: "date-time"
          title: "End Date"
          description: "End date used in the query. Respects RFC 3339."
          example: "2020-04-01T17:00:00Z"
        cpf:
          type: "string"
          title: "CPF"
          pattern: "/^\\d{11}$/"
          description: "Filter by the debtor's CPF. It cannot be used at the same time as the CNPJ."
        CNPJ:
          type: "string"
          title: "CNPJ"
          pattern: "/^\\d{14}$/"
          description: "Filter by the debtor's CNPJ. It cannot be used at the same time as the CPF."
        locationPresente:
          type: "boolean"
          description: "Filter by the existence of linked location."
        status:
          type: "string"
          title: "Billing Record Status"
          description: "Filter by billing status."
        page collective agreement:
          $ref: "#/components/schemas/Pagecao"
    ParametrosConsultaLote:
      type: "object"
      title: "Overdue Billing Batches Query Parameters."
      description: "Parameters used to carry out a query for a batch of charges due."
      required: ["start", "end", "pagination"]
      properties:
        start:
          type: "string"
          format: "date-time"
          title: "Start Date"
          description: "Initial date used in the query. Respects RFC 3339."
          example: "2020-04-01T00:00:00Z"
        end:
          type: "string"
          format: "date-time"
          title: "End Date"
          description: "End date used in the query. Respects RFC 3339."
          example: "2020-04-01T17:00:00Z"
        page collective agreement:
          $ref: "#/components/schemas/Pagecao"
    CobsVConsulted:
      type: "object"
      title: "Consulted due dates"
      required: ["parametros", "cobs"]
      properties:
        in parameters:
          $ref: "#/components/schemas/ParametrosConsultaCob"
        cobs:
          type: "array"
          title: "List of charges"
          items:
            allOf:
              - $ref: "#/components/schemas/CobVCompleta"
              - required: ["status", "txid", "idCob"]
    CobsConsulted:
      type: "object"
      title: "Consulted immediate charges"
      required: ["parametros", "cobs"]
      properties:
        in parameters:
          $ref: "#/components/schemas/ParametrosConsultaCob"
        cobs:
          type: "array"
          title: "List of charges"
          items:
            allOf:
              - $ref: "#/components/schemas/CobCompleta"
              - required: ["status", "txid", "idCob"]
    Pix:
      type: "object"
      title: "Pix"
      required: ["endToEndId", "value", "schedule"]
      properties:
        endToEndId:
          $ref: "#/components/schemas/EndToEndId"
        xid:
          allOf:
            - $ref: "#/components/schemas/TxId"
            - pattern: "[a-zA-Z0-9]{1,35}"
        value:
          type: "string"
          title: "Valor do Pix."
          pattern: "\\d{1,10}\\.\\d{2}"
          description: "Valor do Pix."
        componentsValue:
          type: "object"
          title: "Pix value information"
          description: |-
            The purpose of this structure is to explain the elements that make up the value of the Pix, including information on fines, interest, discounts and rebates when the Pix is ​​related to due charges.

            Structure rules:
            - The `value` of the Pix is ​​equal to:
              - (`original.value` + `withdrawal.value` + `change.value`) + `fine.value` + `interest.value` – `rebate.value` – `discount.value`
              considering only the fields that are present for each type of charge paid.
            - The `loot` and `change` structures will only be returned when the Pix is ​​relative to a Pix Loot or Pix Change, respectively, and
            the other structures (`interest`, `fine`, `rebate` and `discount`) will only be relevant to the payment Pix of the due charges.
            - There cannot be a substructure of type `withdrawal` and another of type `change` at the same time;
            - There is no restriction on the order of the substructures.

            For the case of a Pix Saque, you can return `original` with value=0.00 (zero) since the sum will be respected, or you can omit the
            original substructure. In the case of a Pix Troco or an overdue collection payment, the `original` substructure will always be
            gift.

            #### Valid examples:
            Example of valid fills.

            - **Pix for payment of immediate charge (no withdrawal or change).**
              ```
              ...
              "componentsValue": {
                "original": {
                  "value": "100.00"
                } 
              }
              ...
              ```
            - **Pix Saque.**
              ```
              ...
              "componentsValue": {
                "withdraw": {
                  "value": "100.00",
                  "agentmode": "AGPSS",
                  "prestadorDeServicoDeSaque": "12345678"
                } 
              }
              ...
              ```
            - **Pix for payment of immediate charge with withdrawal (can come original.valor=0.00).**
              ```
              ...
              "componentsValue": {
                "original": {
                  "value": "0.00"
                },
                "withdraw": {
                  "value": "100.00",
                  "agentmode": "AGPSS",
                  "prestadorDeServicoDeSaque": "12345678"
                } 
              }
              ...
              ```
            - **Pix Change.**
              ```
              ...
              "componentsValue": {
                "original": {
                  "value": "80.00"
                },
                "change": {
                  "value": "20.00",
                  "modeAgent": "AGTEC",
                  "prestadorDeServicoDeSaque": "12345678"
                } 
              }
              ...
              ```
            - **Pix for payment of immediate charge with change (order does not matter).**
              ```
              ...
              "componentsValue": {
                "change": {
                  "value": "20.00",
                  "modeAgent": "AGTEC",
                  "prestadorDeServicoDeSaque": "12345678"
                },
                "original": {
                  "value": "80.00"
                }
              }
              ...
              ```
            - **Pix for payment of bills due in the amount of R$100.00, considering a delay of 2 days and a fine of 3% and interest of 1% per day. The `value` of the Pix will be R$105.00.**
              ```
              ...
              "componentsValue": {
                "original": {
                  "value": "100.00"
                },
                "much": {
                  "value": "3.00"
                },
                "fees": {
                  "value": "2.00"
                }
              }
              ...
              ```            
            #### Invalid examples:
            Examples, not exhaustive, of invalid fillings.
            - **`original.value` greater than 0.00 (zero) and `withdrawal` together**
              ```
              ...
              "componentsValue": {
                "original": {
                  "value": "80.00"
                },
                "withdraw": {
                  "value": "20.00",
                  "agentmode": "AGPSS",
                  "prestadorDeServicoDeSaque": "12345678"
                } 
              }
              ...
              ```
            - **two `loot` elements**
              ```
              ...
              "componentsValue": [
                "withdraw": {
                  "value": "20.00",
                  "agentmode": "AGPSS",
                  "prestadorDeServicoDeSaque": "12345678"
                },
                "withdraw": {
                  "value": "10.00",
                  "agentmode": "AGPSS",
                  "prestadorDeServicoDeSaque": "12345678"
                } 
              ]
              ...
              ```
            - **withdrawal and change simultaneously**
              ```
              ...
              "componentsValue": {
                "original": {
                  "value": "60.00"
                },
                "withdraw": {
                  "value": "20.00",
                  "agentmode": "AGPSS",
                  "prestadorDeServicoDeSaque": "12345678"
                },
                "change": {
                  "value": "20.00",
                  "modeAgent": "AGTEC",
                  "prestadorDeServicoDeSaque": "12345678"
                } 
              }
              ...
              ```
          anyOf:
            - $ref: "#/components/schemas/PixValorOriginal"
            - $ref: "#/components/schemas/PixValorSaque"
            - $ref: "#/components/schemas/PixValorTroco"
            - $ref: "#/components/schemas/PixValorJuros"
            - $ref: "#/components/schemas/PixValorMulta"
            - $ref: "#/components/schemas/PixValorAbatimento"
            - $ref: "#/components/schemas/PixValorDesconto"
        key:
          type: "string"
          title: "Recipient's DICT Key"
          description: |
            # Key field format

            * Recipient's key field as assigned in the respective PACS008.
            * Key types can be: phone, email, cpf/cnpj or EVP.
            * The format of the keys can be found in the section "Formatting DICT keys in the BR Code" of the [Pix Initiation Standards Manual](https://www.bcb.gov.br/estabilidadefinanceira/pix).
          maxLength: 77
        time:
          type: "string"
          format: "date-time"
          title: "Time"
          description: "Time the Pix was rendered on the PSP."
        infoPagador:
          type: "string"
          title: "Free payer information"
          maxLength: 140
        returns:
          type: "array"
          title: "Returns"
          items:
            $ref: "#/components/schemas/Devolucao"
    PixValorOriginal:
      type: "object"
      properties:
        original:
          type: "object"
          required: ["valor"]
          properties:
            value:
              type: "string"
              title: "Valor original"
              description: "Valor original do Pix."
              pattern: "\\d{1,10}\\.\\d{2}"
    PixValorSaque:
      type: "object"
      properties:
        withdraw:
          type: "object"
          required: ["Value", "AgentModality", "WithdrawalServiceProvider"]
          properties:
            value:
              type: "string"
              title: "Loot Pix Value"
              description: "Amount of Loot Pix."
              pattern: "\\d{1,10}\\.\\d{2}"
            modalityAgent:
              type: "string"
              title: "Agent Modality"
              description: |
                ##### Type of Agent
                <table><tr><th>SIGLA</th><th>Description</th></tr><tr><td>AGTEC</td><td>Commercial Establishment Agent</td></tr ><tr><td>AGTOT</td><td>Agent Other Type of Legal Entity or Correspondent in the Country</td></tr><tr><td>AGPSS</td><td>Facilitating Agent of Withdrawal Service (<b>ATTENTION</b>: in the mapping for the field 'modalidadeAgente', from pacs.008, this value must be replaced by <b>AGFSS</b>)</td></tr> </table>
              enum:
                - "AGTEC"
                - "AGTOT"
                - "AGPSS"
            providerDoServicoDeSaque:
              type: "string"
              title: "Withdrawal Service Facilitator"
              pattern: "\\d{8}"
              description: "Withdraw Service Facilitator ISPB"
    PixValorTroco:
      type: "object"
      properties:
        change:
          type: "object"
          required: ["Value", "AgentModality", "WithdrawalServiceProvider"]
          properties:
            value:
              type: "string"
              title: "Pix Change Value"
              description: "Pix Change Value."
              pattern: "\\d{1,10}\\.\\d{2}"
            modalityAgent:
              type: "string"
              title: "Agent Modality"
              description: |
                ##### Type of Agent
                <table><tr><th>SIGLA</th><th>Description</th></tr><tr><td>AGTEC</td><td>Commercial Establishment Agent</td></tr ><tr><td>AGTOT</td><td>Agent Other Type of Legal Entity or Correspondent in the Country</td></tr></table>
              enum:
                - "AGTEC"
                - "AGTOT"
            providerDoServicoDeSaque:
              type: "string"
              title: "Withdrawal Service Facilitator"
              pattern: "\\d{8}"
              description: "Withdraw Service Facilitator ISPB"
    PixValue Juros:
      type: "object"
      properties:
        fees:
          type: "object"
          required: ["valor"]
          properties:
            value:
              type: "string"
              title: "Amount relative to interest."
              description: "Interest amount."
              pattern: "\\d{1,10}\\.\\d{2}"
    From PixValorM:
      type: "object"
      properties:
        a lot:
          type: "object"
          required: ["valor"]
          properties:
            value:
              type: "string"
              title: "Amount related to fine."
              description: "Value gives a lot."
              pattern: "\\d{1,10}\\.\\d{2}"
    PixValorDiscount:
      type: "object"
      properties:
        discount:
          type: "object"
          required: ["valor"]
          properties:
            value:
              type: "string"
              title: "Amount related to discount."
              description: "Discount amount."
              pattern: "\\d{1,10}\\.\\d{2}"
    PixValorAbatement:
      type: "object"
      properties:
        rebate:
          type: "object"
          required: ["valor"]
          properties:
            value:
              type: "string"
              title: "Amount related to rebate."
              description: "Amount of rebate."
              pattern: "\\d{1,10}\\.\\d{2}"
    Devolution:
      type: "object"
      title: "Return"
      required: ["id", "rtrId", "valor", "horario", "status"]
      properties:
        id:
          $ref: "#/components/schemas/DevolucaoId"
        rtrId:
          type: "string"
          title: "RtrId"
          description: "ReturnIdentification that transits in PACS004."
          example: "D12345678202009091000abcde123456"
          pattern: "[a-zA-Z0-9]{32}"
          minLength: 32
          maxLength: 32
        value:
          type: "string"
          title: "Amount to return."
          pattern: "\\d{1,10}\\.\\d{2}"
          description: "Amount to return."
        nature:
          $ref: "#/components/schemas/DevolucaoNatureza"
        description:
          type: "string"
          title: "Message to the payer regarding the return."
          maxLength: 140
          description: "The `description` field, optional, determines a text to be presented to the payer containing information about the return. This text will be filled in, in pacs.004, by the recipient's PSP, in the RemittanceInformation field. The size of the field in pacs .004 is limited to 140 characters."
        time:
          type: "object"
          properties:
            request:
              type: "string"
              format: "date-time"
              title: "Request time"
              description: "Time at which the return was requested on the PSP."
            liquidacao:
              type: "string"
              format: "date-time"
              title: "Settlement time"
              description: "Time at which the return was settled on the PSP."
        status:
          type: "string"
          title: "Status"
          description: "Return status."
          enum: ["IN_PROCESSAMENTO", "RETURNED", "NOT_PERFORMED"]
        reason:
          type: "string"
          title: "Status Description."
          description: |
            # Return Status

            Optional field that can be used by the receiving PSP to detail the reasons
            the return has reached the status in question.
            It can be used, for example, to detail the reason for the return not being made.
          maxLength: 140
    ReturnRequested:
      type: "object"
      required: ["valor"]
      properties:
        value:
          type: "string"
          title: "Valor"
          pattern: "\\d{1,10}\\.\\d{2}"
          description: "Amount requested for return. The sum of the values ​​of all returns cannot exceed the total value of the Pix."
        nature:
          $ref: "#/components/schemas/DevolucaoSolicitadaNatureza"
        description:
          type: "string"
          title: "Message to the payer regarding the return."
          description: "The `description` field, optional, determines a text to be presented to the payer containing information about the return. This text will be filled in, in pacs.004, by the recipient's PSP, in the RemittanceInformation field. The size of the field in pacs .004 is limited to 140 characters."
          maxLength: 140
    ParametrosConsultaPayloadLocation:
      type: "object"
      title: "Locations query parameters"
      description: "Parameters used to perform a location query."
      required: ["start", "end", "pagination"]
      properties:
        start:
          type: "string"
          format: "date-time"
          title: "Start Date"
          description: "Initial date used in the query. Respects RFC 3339."
          example: "2020-01-01T00:00:00Z"
        end:
          type: "string"
          format: "date-time"
          title: "End Date"
          description: "End date used in the query. Respects RFC 3339."
          example: "2020-12-01T17:00:00Z"
        txIdPresent:
          type: "boolean"
          description: "Filter by the existence of txid."
        tipoCob:
          type: "string"
          enum:
            - "cob"
            - "cobv"
        page collective agreement:
          $ref: "#/components/schemas/Pagecao"
    PayloadLocationConsultadas:
      type: "object"
      title: "Consulted Locations"
      required: ["parametros", "loc"]
      properties:
        in parameters:
          $ref: "#/components/schemas/ParametrosConsultaPayloadLocation"
        place:
          type: "array"
          title: "List of registered locations"
          items:
            allOf:
              - $ref: "#/components/schemas/PayloadLocationCompleta"
    ParametrosConsultaPix:
      type: "object"
      title: "Pix Query Parameters"
      description: "Parameters used to perform a Pix query."
      required: ["start", "end", "pagination"]
      properties:
        start:
          type: "string"
          format: "date-time"
          title: "Start Date"
          description: "Initial date used in the query. Respects RFC 3339."
          example: "2020-01-01T00:00:00Z"
        end:
          type: "string"
          format: "date-time"
          title: "End Date"
          description: "End date used in the query. Respects RFC 3339."
          example: "2020-12-01T17:00:00Z"
        xid:
          allOf:
            - $ref: "#/components/schemas/TxId"
            - pattern: "[a-zA-Z0-9]{1,35}"
        txIdPresent:
          type: "boolean"
          description: "Filter by the existence of txid."
        ReturnGift:
          type: "boolean"
          description: "Filter by the existence of a return."
        cpf:
          type: "string"
          pattern: "/^\\d{11}$/"
          description: "CPF"
        CNPJ:
          type: "string"
          pattern: "/^\\d{14}$/"
          description: "CNPJ"
        page collective agreement:
          $ref: "#/components/schemas/Pagecao"
    ParametrosConsultaWebhooks:
      type: "object"
      title: "Webhook Query Parameters"
      description: "Parameters used to perform a Webhooks query."
      properties:
        start:
          type: "string"
          format: "date-time"
          title: "Start Date"
          description: "Initial date used in the query. Respects RFC 3339."
          example: "2020-01-01T00:00:00Z"
        end:
          type: "string"
          format: "date-time"
          title: "End Date"
          description: "End date used in the query. Respects RFC 3339."
          example: "2020-12-01T17:00:00Z"
        page collective agreement:
          $ref: "#/components/schemas/Pagecao"
    PixConsulted:
      type: "object"
      title: "Consulted Pix"
      required: ["parametros", "cobs"]
      properties:
        in parameters:
          $ref: "#/components/schemas/ParametrosConsultaPix"
        pix:
          type: "array"
          title: "List of received Pix"
          items:
            allOf:
              - $ref: "#/components/schemas/Pix"
    WebhooksConsultados:
      type: "object"
      title: "Webhooks Queried"
      required: ["webhooks"]
      properties:
        in parameters:
          $ref: "#/components/schemas/ParametrosConsultaWebhooks"
        webhooks:
          type: "array"
          title: "List of consulted Webhooks"
          items:
            allOf:
              - $ref: "#/components/schemas/WebhookCompleto"
    Page Collective Agreement:
      type: "object"
      title: "Pagination"
      required:
        [
          "pageAtual",
          "itensPorPage",
          "numberOfPages",
          "TotalAmountOfItems",
        ]
      properties:
        page atual:
          type: "integer"
          title: "Current page"
          description: "Retrieved page number."
          minimum: 0
        itensPorPage:
          type: "integer"
          title: "Items per page"
          description: "Number of records returned on the page."
          minimum: 1
        quantityOfPages:
          type: "integer"
          title: "Number of pages"
          description: "Number of pages available for consultation."
          minimum: 1
        TotalQuantityOfItems:
          type: "integer"
          title: "Total amount of items"
          description: "Total amount of items available according to the informed parameters."
          minimum: 0
    purple:
      type: "object"
      title: "Violations"
      properties:
        reason:
          type: "string"
          title: "Error Description"
          description: "Error description"
          example: "Charge amount cannot be 0.00"
        property:
          type: "string"
          title: "Property Name"
          description: "Property name"
          example: "cob.key"
        value:
          type: "string"
          title: "Property Value"
          description: "Property value"
          example: "061996671234"
    Problem:
      type: object
      required: ["type", "title", "status"]
      properties:
        type:
          type: string
          format: uri
          description: "Reference URI that identifies the type of issue. As per RFC 7807."
          example: "https://pix.bcb.gov.br/api/v2/error/NaoEncontrado"
        title:
          type: string
          description: "Short description of the issue."
          example: Not found
        status:
          type: integer
          description: "HTTP code of the returned status."
          example: 404
        detail:
          type: string
          description: "Full description of the issue."
        correlationId:
          type: string
          description: Issue correlation identifier for support purposes
        violet:
          type: array
          items:
            $ref: "#/components/schemas/Violacao"
    Start:
      type: "string"
      format: "date-time"
      title: "Start date"
      description: "Filter records whose creation date is greater than or equal to the start date. Respects RFC 3339."
    End:
      type: "string"
      format: "date-time"
      title: "End date"
      description: "Filter records whose creation date is less than or equal to the end date. Respects RFC 3339."
  parameters:
    page atual:
      in: "query"
      name: "pagecao.pageAtual"
      required: false
      schema:
        type: "integer"
        format: "int32"
        title: "Current page"
        minimum: 0
        default: 0
        description: "Page to be returned by the query. If not informed, PSP will assume it will be 0."
    itensPorPage:
      in: "query"
      name: "paginacao.itensPorPage"
      required: false
      schema:
        type: "integer"
        format: "int32"
        title: "Items per Page"
        minimum: 1
        maximum: 1000
        default: 100
        description: "Maximum number of records returned on each page. Only the last page can contain a smaller number of records."
  responses:
    RequisicaoInvalida:
      description: "Problems with the request."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Problema"
    Not found:
      description: "Requested resource not found."
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problema"
          examples:
            example1:
              $ref: "#/components/examples/NaoEncontradoExample1"
    Access denied:
      description: "Authenticated participant request that violates some authorization rule."
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problema"
          examples:
            example1:
              $ref: "#/components/examples/AcessoNegadoExample1"
    ServicoIndisponivel:
      description: "Service is currently unavailable. Requested service may be down for maintenance or out of service window."
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problema"
          examples:
            example1:
              $ref: "#/components/examples/ServicoIndisponivelExample1"


